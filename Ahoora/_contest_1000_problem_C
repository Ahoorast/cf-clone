#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10;
pair<long long, int> p[N << 1];
long long sum[N], n, pos[N << 1], neg[N << 1];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++) {
		long long l, r;
		cin >> l >> r;
		p[i * 2 - 1] = {l, +1};
		p[i * 2] = {r, -1};
	}
	sort(p + 1, p + 2 * n + 1);
	int now = 0;
	for (int i = 1; i <= n << 1; i++) {
		now += p[i].second;
		sum[now] += max(p[i + 1].first - p[i].first - 1, 0LL);
	}
	for (int i = 1; i <= n << 1; i++) {
		pos[i] = pos[i - 1] + (p[i].second == 1);
		neg[i] = neg[i - 1] + (p[i].second == -1);
	}
	for (int i = 1; i <= n << 1; i++) {
		int t = 0, x = pos[i - 1] - neg[i - 1];
		while (true) {
			if (p[i].second == 1)
				t++;
			if (i + 1 <= n << 1 && p[i].first == p[i + 1].first)
				i++;
			else
				break;
		}
		sum[t + x]++;
	}
	for (int i = 1; i <= n; i++)
		cout << sum[i] << ' ';
	cout << endl;
	return 0;
}
