#include<bits/stdc++.h>
using namespace std;
 
const int N = 3 * 1000 * 100 + 10;
int n, val[2][N];
long long s[N], dp[N][8];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 0; i < 2; i++)
		for (int j = 1; j <= n; j++)
			cin >> val[i][j];
	for (int i = n; i >= 1; i--)
		s[i] = s[i + 1] + val[0][i] + val[1][i];
	for (int i = n; i >= 1; i--)
		for (int j = 0; j < 2; j++)
			dp[i][j] = dp[i + 1][j] + s[i + 1] + 1LL * (2 * (n - i + 1) - 1) * val[!j][i];
	for (int i = n; i >= 1; i--) {
		dp[i][3] = max(dp[i][0], val[1][i] + dp[i + 1][4] + s[i + 1] * 2);
		dp[i][4] = max(dp[i][1], val[0][i] + dp[i + 1][3] + s[i + 1] * 2);
	}
	cout << dp[1][3] << endl;
	return 0;
}
