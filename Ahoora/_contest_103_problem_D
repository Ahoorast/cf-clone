#include<bits/stdc++.h>
using namespace std;
 
const int N = 3 * 1000 * 100 + 10, SQ = 550;
int n, a[N], b[N], w[N];
long long ans[N];
vector<int> query[SQ];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> w[i];
	int Q;
	cin >> Q;
	for (int i = 0; i < Q; i++) {
		cin >> a[i] >> b[i];
		a[i]--;
		if (b[i] >= SQ) {
			int j = a[i];
			while (j < n) {
				ans[i] += w[j];
				j += b[i];
			}
		}
		else 
			query[b[i]].push_back(i);
	}
	for (int j = 1; j < SQ; j++) {
		vector<long long> dp(n, 0);
		for (int i = n - 1; i >= 0; i--) {
			dp[i] = w[i];
			if (i + j < n)
				dp[i] += dp[i + j];
		}
		for (auto id: query[j])
			ans[id] = dp[a[id]];
	}
	for (int i = 0; i < Q; i++)
		cout << ans[i] << '\n';
	return 0;
}
