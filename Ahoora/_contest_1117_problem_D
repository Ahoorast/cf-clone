#include<bits/stdc++.h>
using namespace std;
 
const int N = 105, mod = 1LL * 1000 * 1000 * 1000 + 7;
int n;
long long m;
 
struct Mat {
	int a[N][N] = {0};
	Mat operator * (Mat b) {
		Mat res;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				for (int k = 0; k < n; k++)
					(res.a[i][j] += 1LL * a[i][k] * b.a[k][j] % mod) %= mod;
		return res;
	}
} base;
 
Mat ans(long long x) {
	if (x == 1) 
		return base;
	Mat res = ans(x / 2);
	res = res * res;
	if (x & 1)
		res = res * base;
	return res;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> m >> n;
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			base.a[i][j] = 0;
	base.a[0][0] = base.a[n - 1][0] = 1;
	for (int i = 1; i < n; i++)
		base.a[i - 1][i] = 1;
	cout << ans(m).a[0][0] << '\n';
	return 0;
}
