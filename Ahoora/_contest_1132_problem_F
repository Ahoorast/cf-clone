#include <bits/stdc++.h>
using namespace std;
 
const int N = 510;
char s[N];
int n, dp[N][N];
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> s[i], dp[i][i] = 1;
	for (int i = 1; i < n; i++)
		dp[i][i + 1] = 2 - (s[i] == s[i + 1]);
	for (int i = n; i >= 1; i--)
		for (int j = i + 2; j <= n; j++) {
			dp[i][j] = N;
			if (s[i] == s[j])
				dp[i][j] = dp[i + 1][j - 1] + 1;
			for (int k = i + 1; k < j; k++) {
				dp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j]);
				if (s[k] == s[j])
					dp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j - 1]);
				if (s[k] == s[i])
					dp[i][j] = min(dp[i][j], dp[i + 1][k - 1] + dp[k][j]);
				if (s[k] == s[i] && s[i] == s[j])
					dp[i][j] = min(dp[i + 1][k - 1] + dp[k + 1][j - 1] + 1, dp[i][j]);
			}
		}
	cout << dp[1][n] << endl;
	return 0;
}
