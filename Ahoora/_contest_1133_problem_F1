#include <bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 100;
int n, m, deg[N];
vector<int> adj[N];
bool mark[N];
 
void read() {
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int v, u;
		cin >> v >> u;
		adj[v].push_back(u), adj[u].push_back(v);
		deg[v]++, deg[u]++;
	}
}
 
void bfs(int root) {
	mark[root] = true;
	queue<int> q;
	q.push(root);
	while (q.size()) {
		int v = q.front();
		for (auto u: adj[v])
			if (!mark[u])
				q.push(u), cout << v << ' ' << u << endl, mark[u] = true;
		q.pop();
	}
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	read();
	int root = 1;
	for (int i = 2; i <= n; i++)
		if (deg[root] < deg[i])
			root = i;
	bfs(root);
	return 0;
}
