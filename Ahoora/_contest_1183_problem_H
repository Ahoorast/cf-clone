#include<bits/stdc++.h>
using namespace std;
 
const int N = 110;
const long long inf = 1LL * 1000 * 1000 * 1000 * 1000 + 100;
int n, last[N];
long long dp[N][N], k;
string s;
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> k >> s;
	for (int i = 0; i <= n; i++)
		dp[i][0] = 1;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= i; j++) {
			dp[i][j] = dp[i - 1][j] + dp[i - 1][j - 1];
			if (last[s[i - 1] - 'a']) 
				dp[i][j] -= dp[last[s[i - 1] - 'a'] - 1][j - 1];
			dp[i][j] = min(dp[i][j], inf);
		}
		last[s[i - 1] - 'a'] = i;
	}
	long long ans = 0;
	for (int i = n; i >= 0; i--) {
		long long t = min(dp[n][i], k);
		ans += t * (n - i);
		k -= t;
	}
	if (k)
		return cout << "-1\n", 0;
	cout << ans << '\n';
	return 0;
}
