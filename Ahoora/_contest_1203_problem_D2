#include <bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10;
string s, t;
int L[N], R[N];
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> s >> t;
	int sz = s.size(), tz = t.size();
	int l = 0, r = tz - 1;
	L[0] = 0, R[tz - 1] = sz;
	while (l >= 0 && r < tz && l < tz && r >= 0) {
		if (l)
			L[l] = L[l - 1] + 1;
		if (r < tz - 1)
			R[r] = R[r + 1] - 1;
		while (s[L[l]] != t[l])
			L[l]++;
		while (s[R[r]] != t[r])
			R[r]--;
		l++, r--;
	}
	int ans = max(R[0], sz - L[tz - 1] - 1);
	for (int i = 0; i + 1 < tz; i++)
		ans = max(ans, R[i + 1] - L[i] - 1);
	cout << ans << endl;
	return 0;
}
