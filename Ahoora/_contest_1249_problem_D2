#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 100;
int cnt[N], lesser[N], n, K;
pair<int, int> p[N];
set<pair<int, int>> av;
vector<int> L[N], R[N];
 
void read() {
	cin >> n >> K;
	for (int i = 1; i <= n; i++) {
		int l, r;
		cin >> l >> r;
		p[i].first = l, p[i].second = r;
		L[l].push_back(i), R[r].push_back(i);
	}
	for (int i = 1; i < N; i++)
		cnt[i] = cnt[i - 1] - (int)R[i - 1].size() + (int)L[i].size();
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	read();
	int m = 0, less = 0;
	vector<int> P;
	for (int i = 1; i < N; i++) {
		for (auto it: L[i])
			av.insert({p[it].second, it});
		for (auto it: R[i - 1])
			av.erase({p[it].second, it});
		less -= lesser[i - 1];
		while (cnt[i] - less > K) {
			auto it = --av.end();
			lesser[(*it).first]++;
			m++;
			less++;
			P.push_back((*it).second);
			av.erase(it);
		}
	}
	cout << m << endl;
	for (auto it: P)
		cout << it << ' ';
	cout << endl;
	return 0;
}
