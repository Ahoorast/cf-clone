#include <bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 100;
int trie[N * 30][2], n, cnt;
 
void insert(long long x) {
	for (int i = 30, j = 0; i >= 0; i--) {
		bool b = (1 << i) & x;
		if (!trie[j][b])
			trie[j][b] = ++cnt;
		j = trie[j][b];
	}
}
 
long long dfs(int root, int h) {
	--h;
	bool both = true;
	for (int i = 0; i < 2; i++)
		if (!trie[root][i])
			both = false;
	if (!both) {
		if (trie[root][0])
			return dfs(trie[root][0], h);
		else if (trie[root][1])
			return dfs(trie[root][1], h);
		else
			return 0;
	}
	return min(dfs(trie[root][0], h), dfs(trie[root][1], h)) + (1 << h);
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	long long a;
	for (int i = 0; i < n; i++) 
		cin >> a, insert(a);
	cout << dfs(0, 31) << endl;
	return 0;
}
