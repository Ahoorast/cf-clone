#include<bits/stdc++.h>
using namespace std;
 
const int N = 3100;
int n, K;
bool a[N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> K;
	for (int i = 1; i <= n; i++) {
		char c;
		cin >> c;
		a[i] = (c == 'R');
	}
	long long tot = 0, first = 1;
	for (int i = 1; i <= n; i++)
		if (a[i] == 0) {
			tot += i - first;
			first++;
		}
	if (K > tot)
		return cout << -1 << '\n', 0;
	vector<int> vec;
	int sz = 0, baghiash = K;
	for (int i = 1; i + 1 <= n; i++)
		if (a[i] == 1 && a[i + 1] == 0)
			vec.push_back(i), sz++;
	vector<vector<int>> ans;
	while (K--) {
		int mx = min(1LL * sz, tot - baghiash + 1), r = sz - 1;
		tot -= mx;
		vector<int> now, tmp;
		if (mx == 0 || tot < 0)
			return cout << -1 << '\n', 0;
		while (r >= 0 && mx > 0) {
			mx--;
			now.push_back(vec[r]);
			swap(a[vec[r]], a[vec[r] + 1]);
			int t = vec[r];
			vec.pop_back();
			sz--;
			if (t - 1 > 0 && a[t - 1] == 1)
				tmp.push_back(t - 1);
			if (t + 2 <= n && a[t + 2] == 0)
				tmp.push_back(t + 1);
			r--;
		}
		for (auto it: tmp)
			vec.push_back(it), sz++;
		ans.push_back(now);
		baghiash--;
	}
	if (tot > 0)
		return cout << "-1\n", 0;
	int x = ans.size();
	for (int i = 0; i < x; i++) {
		int sz = (int)(ans[i].size());
		cout << sz << ' ';
		for (int j = 0; j < sz; j++)
			cout << ans[i][j] << ' ';
		cout << '\n';
	}
	return 0;
}
