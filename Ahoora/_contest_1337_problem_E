#include<bits/stdc++.h>
using namespace std;
 
const int N = 3000 + 100, mod = 998244353;
int dp[2][N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	string s, t;
	string tmp;
	cin >> tmp;
	s += '?', s += tmp;
	cin >> tmp;
	t += '?', t += tmp;
	int n = s.size(), m = t.size();
	n--, m--;
	int ans = 0;
	for (int i = 0; i <= m + 1; i++)
		dp[0][i] = 1;
	for (int i = 1; i <= n; i++)
		for (int j = m; j >= 1; j--) {
			dp[i & 1][m + 1] = (dp[(i - 1) & 1][m + 1] * 2) % mod;
			int M = min(m, j + i - 1);
			if (M - j + 1 != i)
				dp[i & 1][j] = (dp[(i - 1) & 1][j] + (s[i] == t[j]) * dp[(i - 1) & 1][j + 1]) % mod;
			else
				dp[i & 1][j] = (dp[(i - 1) & 1][j] * (t[M] == s[i]) + dp[(i - 1) & 1][j + 1] * (s[i] == t[j])) % mod;
			if (j == 1 && M == m)
				(ans += dp[i & 1][j]) %= mod;
		}
	cout << ans << '\n';
	return 0;
}
