#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10;
long long n, a[N];
long long dp[N][2];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		cin >> n;
		for (int i = 1; i <= n; i++)
			cin >> a[i];
		a[0] = -a[1];
		long long mx = -1LL * 1000 * 1000 * 1000 - 10, ans = 0;
		a[n + 1] = -a[n];
		for (int i = 1; i <= n + 1; i++) {
			if ((a[i] > 0) != (a[i - 1] > 0)) {
				if (i != 1)
					ans += mx;//, cout << mx << endl;
				
				mx = -1LL * 1000 * 1000 * 1000 - 10;
				mx = max(mx, a[i]);
			}
			else {
				mx = max(mx, a[i]);
			}
		}
		cout << ans << endl;
	}
	return 0;
}
