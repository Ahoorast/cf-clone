#include<bits/stdc++.h>
using namespace std;
 
int n;
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		cin >> n;
		vector<set<int>> s;
		for (int i = 2; i <= n; i++) {
			set<int> t;
			int a, k;
			cin >> k;
			for (int j = 1; j <= k; j++)
				cin >> a, t.insert(a);
			s.push_back(t);
		}
		for (int i = 1; i <= n; i++) {
			vector<set<int>> t = s;
			vector<int> ans;
			int nxt = i, k = n;
			while (k--) {
				ans.push_back(nxt);
				for (auto &it: t)
					it.erase(nxt);
				int cnt = 0;
				nxt = -1;
				for (auto it: t) 
					if (it.size() == 1)
						cnt++, nxt = *it.begin();
				if (cnt > 1 || nxt == -1) 
					break;
			}
			if (ans.size() == n) {
				vector<set<int>> t = s;
				vector<int> pos(n + 1);
				vector<bool> mark(n);
				for (int i = 0; i < n; i++)
					pos[ans[i]] = i;
				bool res = true;
				for (auto &s: t) {
					int last = 0;
					for (auto it: s)
						last = max(last, pos[it]);
					mark[last] = true;
					int K = s.size();
					for (int j = last; j > last - K; j--)
						s.erase(ans[j]);
					res &= !((int)s.size());
				}
				for (int i = 1; i < n; i++)
					res &= mark[i];
				if (res) {
					for (auto it: ans)
						cout << it << ' ';
					cout << '\n';
					break;
				}
			}
		}
	}
	return 0;
}
