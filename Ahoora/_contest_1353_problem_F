#include<bits/stdc++.h>
using namespace std;
 
const int N = 200;
long long dp[N][N], a[N][N];
int n, m;
 
long long cost(long long val) {
	dp[1][1] = a[1][1] - val;
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
			if (!(i == 1 && j == 1)) 
				if (val + i + j - 2 <= a[i][j])
					dp[i][j] = min(dp[i - 1][j], dp[i][j - 1]) + (a[i][j] - (val + i + j - 2));
				else
					dp[i][j] = 1LL << 60;
	return dp[n][m];
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	for (int i = 0; i < N; i++)
		dp[i][0] = dp[0][i] = 1LL << 60;
	while (Q--) {
		cin >> n >> m;
		for (int i = 1; i <= n; i++)
			for (int j = 1; j <= m; j++)
				cin >> a[i][j];
		long long ans = 1LL << 60;
		for (int i = 1; i <= n; i++)
			for (int j = 1; j <= m; j++)
				if (a[i][j] - i - j + 2 <= a[1][1]) 
					ans = min(ans, cost(a[i][j] - i - j + 2));
		cout << ans << '\n';
	}
	return 0;
}
