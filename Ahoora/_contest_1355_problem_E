#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 10;
long long h[N], n, A, R, M, sum;
 
long long cost(long long x) {
	long long res = 0, high = 0, less = 0, cnt = 0;
	for (int i = 1; i <= n; i++)
		high += max(h[i] - x, 0LL), less += max(0LL, x - h[i]), cnt += x >= h[i];
	return sum >= x * n? R * (sum - x * n) + min(M * (high - (sum - x * n)), R * (high - (sum - x * n)) + A * less): A * (x * n - sum) + min(high * M, high * R + A * (less - (x * n - sum)));
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> A >> R >> M;
	for (int i = 1; i <= n; i++)
		cin >> h[i], sum += h[i];
	long long ans = 1LL << 60, l = 0, r = sum / n;
	while (l < r) {
		long long mid = l + r >> 1;
		long long v1 = cost(mid), v2 = cost(mid + 1);
		cost(mid) <= cost(mid + 1)? r = mid: l = mid + 1;
	}
	for (int i = -10; i <= +10; i++)
		if (r - i >= 0)
			ans = min(ans, cost(r - i));
	l = sum / n + 1, r = 2e9;
	while (l < r) {
		long long mid = l + r >> 1;
		cost(mid) <= cost(mid + 1)? r = mid: l = mid + 1;
	}
	for (int i = -10; i <= + 10; i++)
		if (r - i >= 0)
			ans = min(ans, cost(r - i));
	cout << ans << '\n';
	return 0;
}
