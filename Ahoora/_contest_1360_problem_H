#include<bits/stdc++.h>
using namespace std;
 
const int N = 110;
long long n, m, a[N];
 
long long getInd(long long x) {
	long long i = upper_bound(a + 1, a + n + 2, x) - a;
	while (a[i] > x)
		i--;
	return x - i;
}
 
int main() { 
	int Q;
	cin >> Q;
	while (Q--) {
		cin >> n >> m;
		for (int i = 1; i <= n; i++) {
			string s;
			cin >> s;
			for (int j = 0; j < m; j++) 
				a[i] ^= (1LL << j) * (s[m - j - 1] - '0');
		}
		a[n + 1] = 1LL << 61;
		sort(a + 1, a + n + 1);
		long long l = 0, r = (1LL << m) - 1, target = ((1LL << m) - n - 1) >> 1;
		while (l < r) {
			long long mid = l + r >> 1;
			long long t = getInd(mid);
			if (t > target)
				r = mid - 1;
			else if (t == target)
				r = mid;
			else 
				l = mid + 1;
		}
		bool flag = true;
		for (; flag; l++)
			if (a[lower_bound(a + 1, a + n + 2, l) - a] != l)
				for (int j = m - 1; j >= 0; j--)
					cout << (bool)((1LL << j) & l), flag = false;
		cout << '\n';
		for (int i = 1; i <= n + 1; i++)
			a[i] = 0;
	}
	return 0;
}
