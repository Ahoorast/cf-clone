#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10;
long long n, a[N], d[N][2];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		cin >> n;
		for (int i = 1; i <= n; i++)
			cin >> a[i];
		d[1][0] = a[2] - a[1];
		for (int i = 4; i <= n; i += 2)
			d[i / 2][0] = d[(i / 2) - 1][0] + a[i] - a[i - 1];
		d[1][1] = a[2] - a[3];
		for (int i = 5; i <= n; i += 2)
			d[i / 2][1] = d[(i / 2) - 1][1] + a[i - 1] - a[i];
		long long mn = 0, delta = 0;
		for (int i = 2; i <= n; i += 2) {
			mn = min(mn, d[i / 2][0]);
			delta = max(delta, d[i / 2][0] - mn);
		}
		mn = 0;
		for (int i = 3; i <= n; i += 2) {
			mn = min(mn, d[i / 2][1]);
			delta = max(delta, d[i / 2][1] - mn);
		}
		long long ans = 0;
		for (int i = 1; i <= n; i += 2)
			ans += a[i];
		for (int i = 1; i <= n; i++)
			d[i][0] = d[i][1] = a[i] = 0;
		cout << ans + delta << '\n';
	}
	return 0;
}
