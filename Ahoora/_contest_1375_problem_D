#include<bits/stdc++.h>
using namespace std;
 
const int N = 2020;
bool vis[N], mark[N];
int n, a[N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		cin >> n;
		int t = 0;
		for (int i = 0; i < n; i++)
			cin >> a[i], vis[a[i]] = true, t += a[i] == i, mark[i] = (a[i] == i);
		int MEX = 0;
		while (vis[MEX])
			MEX++;
		vector<int> ans;
		while (t < n) {
			for (int i = 0; i < n; i++)
				vis[a[i]] = false;
			if (MEX >= n) {
				for (int i = 0; i < n; i++)
					if (!mark[i]) {
						ans.push_back(i + 1);
						a[i] = n;
						break;
					}
			}
			else {
				a[MEX] = MEX;
				ans.push_back(MEX + 1);
				mark[MEX] = true;
				t++;
			}
			for (int i = 0; i < n; i++)
				vis[a[i]] = true;
			MEX = 0;
			while (vis[MEX])
				MEX++;
		}
		cout << (int)(ans.size()) << '\n';
		for (auto x: ans)
			cout << x << ' ';
		cout << '\n';
		for (int i = 0; i < n * 2; i++)
			vis[i] = mark[i] = false;
	}
	return 0;
}
