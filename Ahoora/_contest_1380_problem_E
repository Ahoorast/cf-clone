#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10;
int n, m, t[N], sz[N], setas[N], ans;
set<int> vec[N];
 
int get(int x) {
	return setas[x] == setas[setas[x]]? setas[x]: setas[x] = get(setas[x]);
}
 
void merge(int x, int y) {
	x = get(x), y = get(y);
	if (sz[x] < sz[y]) {
		setas[x] = y;
		swap(x, y);
	}
	for (auto it: vec[y]) {
		if (it - 1 >= 1 && t[it - 1] == x)
			ans--;
		if (it + 1 <= n && t[it + 1] == x)
			ans--;
		sz[x]++;
	}
	for (auto it: vec[y]) {
		vec[x].insert(it);
		t[it] = x;
	}
	vec[y].clear(), sz[y] = 0;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	for (int i = 1; i <= n; i++) {
		cin >> t[i];
		sz[t[i]]++, setas[t[i]] = t[i];
		ans += t[i] != t[i - 1];
		vec[t[i]].insert(i);
	}
	ans--;
	cout << ans << '\n';
	for (int Q = 1; Q < m; Q++) {
		int a, b;
		cin >> a >> b;
		merge(a, b);
		cout << ans << '\n';
	}
	return 0;
}
