#include<bits/stdc++.h>
using namespace std;
 
long long intersect(long long l1, long long r1, long long l2, long long r2) {
	long long lx = max(l1, l2), rx = min(r1, r2);
	return max(0LL, rx - lx);
}
 
long long check(long long t1, long long t2, long long x, long long d) {
	long long res = x * t1;
	if (x * t2 >= d) 
		return res + d;
	res += x * t2;
	d -= x * t2;
	res += 2 * d;
	return res;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		long long n, K, l1, r1, l2, r2, s = 0;
		cin >> n >> K >> l1 >> r1 >> l2 >> r2;
		s = intersect(l1, r1, l2, r2) * n;
		if (s >= K) 
			cout << "0\n";
		else {
			long long t1 = 0;
			if (l2 > r1) {
				t1 = l2 - r1;
				r1 = l2;
			}
			else if (l1 > r2) {
				t1 = l1 - r2;
				r2 = l1;
			}
			long long t2 = max(r1, r2) * 2 - r1 - r2 + l1 + l2 - min(l1, l2) * 2;
			long long d = K - s;
			long long ans = 1LL << 55, tot = 0, tz = 0;
			for (int i = 1; i <= n; i++)
				ans = min(ans, check(t1, t2, i, d));
			cout << ans << '\n';
		}
	}
	return 0;
}
