#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 10, SQ = 320;
int n, a[N], last[N];
pair<int, int> dp[N];
 
void DO(int l, int r) {
	for (int i = r - 1; i >= l; i--) {
		if (a[i] + i >= r)
			dp[i] = {1, a[i] + i}, last[i] = i;
		else
			dp[i] = {1 + dp[i + a[i]].first, dp[i + a[i]].second}, last[i] = last[i + a[i]];
	}
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> n >> Q;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < SQ; i++)
		DO(i * SQ, min(i * SQ + SQ, n));
	while (Q--) {
		int tp;
		cin >> tp;
		if (tp == 0) {
			int p, x;
			cin >> p >> x;
			--p;
			a[p] = x;
			DO(p / SQ * SQ, min(p / SQ * SQ + SQ, n));
		} else {
			int p;
			cin >> p;
			--p;
			int ans = 0, lst = p;
			while (p < n) {
				ans += dp[p].first;
				lst = last[p];
				p = dp[p].second;
			}
			cout << ++lst << ' ' << ans << '\n';
		}
	}
	return 0;
}
