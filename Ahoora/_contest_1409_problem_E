#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10;
int n, k, dp[N][3];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		cin >> n >> k;
		vector<int> x;
		for (int i = 1, a; i <= n; i++)
			cin >> a, x.push_back(a);
		for (int i = 1, y; i <= n; i++)
			cin >> y;
		sort(x.begin(), x.end());
		for (int i = 1; i <= n + 1; i++)
			for (int j = 0; j <= 2; j++)
				dp[i][j] = 0;
		for (int i = n; i >= 1; i--)
			for (int j = 2; j >= 1; j--) {
				dp[i][j] = dp[i + 1][j];
				int ind = upper_bound(x.begin(), x.end(), x[i - 1] + k) - x.begin();
				ind++;
				dp[i][j] = max(dp[i][j], dp[ind][j - 1] + ind - i);
			}
		cout << dp[1][2] << '\n';
	}
	return 0;
}
