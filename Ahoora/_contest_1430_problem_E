#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10, Z = 26;
int n, p[N], where[N], fen[N];
char s[N];
vector<int> pos[2][Z];
 
int get(int x) {
	int res = 0;
	for (; x; x -= x & (-x))
		res += fen[x];
	return res;
}
 
int sum(int l, int r) {
	return get(r - 1) - get(l - 1);
}
 
void upd(int x) {
	for (; x <= n; x += x & (-x))
		fen[x]++;
}
 
int main() { 
	cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> s[i];
		pos[0][s[i] - 'a'].push_back(i);
	}
	for (int i = 0; i < Z; i++) {
		for (auto x: pos[0][i])
			pos[1][i].push_back(n - x + 1);
		sort(pos[1][i].begin(), pos[1][i].end());
	}
	for (int i = 0; i < Z; i++) {
		int j = 0;
		for (auto x: pos[0][i]) 
			p[x] = pos[1][i][j++];
	}
	long long ans = 0;
	for (int i = 1; i <= n; i++) {
		ans += sum(p[i], n + 1);
		upd(p[i]);
	}
	cout << ans << '\n';
	return 0;
}
