#include<bits/stdc++.h>
using namespace std;
 
const int N = 5010;
int n, a[N], par[N];
 
int get_par(int v) {
	return par[v] == v? v: par[v] = get_par(par[v]);
}
 
void Union(int v, int u) {
	v = get_par(v), u = get_par(u);
	par[u] =v ;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		cin >> n;
		for (int i = 0; i < n; i++)
			cin >> a[i];
		iota(par, par + n, 0);
		int m = 0;
		vector<pair<int, int>> ans;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				if (a[i] != a[j] && get_par(i) != get_par(j)) {
					m++;
					Union(i, j);
					ans.push_back({i, j});
				}
		if (m == n - 1) {
			cout << "YES\n";
			for (auto it: ans)
				cout << it.first + 1 << ' ' << it.second + 1 << '\n';
		} else
			cout << "NO\n";
	}
	return 0;
}
