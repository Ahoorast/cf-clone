#include<bits/stdc++.h>
using namespace std;
 
const int mod = 1LL * 1000 * 1000 * 1000 + 7;
 
int add(int x, int y) {
	return ((x + y) % mod + mod) % mod;
}
 
int mul(int x, int y) {
	return 1LL * x * y % mod;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int n, k, Q;
	cin >> n >> k >> Q;
	vector<int> a(n);
	for (int i = 0; i < n; i++)
		cin >> a[i];
	vector<vector<int>> dp(k + 1, vector<int>(n, 0));
	vector<int> wow(n); 
	for (int i = 0; i < n; i++)
		dp[0][i] = 1;
	for (int i = 1; i <= k; i++) 
		for (int j = 0; j < n; j++)
			dp[i][j] = add((j - 1 >= 0? dp[i - 1][j - 1]: 0), (j + 1 < n? dp[i - 1][j + 1]: 0));
	for (int i = 0; i < n; i++)
		for (int j = 0; j <= k; j++)
			wow[i] = add(wow[i], mul(dp[j][i], dp[k - j][i]));
	int ans = 0;
	for (int i = 0; i < n; i++)
		ans = add(ans, mul(wow[i], a[i]));
	while (Q--) {
		int i, x;
		cin >> i >> x;
		i--;
		ans = add(ans, -mul(wow[i], a[i]));
		a[i] = x;
		ans = add(ans, mul(wow[i], a[i]));
		cout << ans << '\n';
	}
	return 0;
}
