#include<bits/stdc++.h>
using namespace std;
 
const int MX = 1LL * 1000 * 1000 * 10;
const int N = 2 * 1000 * 100 + 10;
int last[MX], dp[N], a[N], mx[N];
 
inline int inp()  {
	int res = 0;
	char c = '0';
	while (c >= '0' && c <= '9') {
		((res *= 10) += c - '0');
		c = getchar();
	}
	return res;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	Q = inp();
	while (Q--) {
		int n, k;
		n = inp(), k = inp();
		set<int> s;
		int ans = 1;
		for (int i = 0, a; i < n; i++) {
			a = inp();
			int rep = 1;
			for (int j = 2; 1LL * j * j <= a; j++)
				if (a % j == 0) {
					int cnt = 0;
					while (a % j == 0)
						cnt++, a /= j;
					if (cnt & 1)
						rep *= j;
				}
			if (a > 1)
				rep *= a;
			if (s.count(rep)) {
				s.clear();
				ans++;
			}
			s.insert(rep);
		}
		cout << ans << '\n';
	}
	return 0;
}
