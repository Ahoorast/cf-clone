#include<bits/stdc++.h>
using namespace std;
 
 
const int N = 1000 * 100 + 10;
int l[N], r[N], n, ans[N];
 
void solve(int ind) {
	int tav = 1 << ind;
	vector<int> L, R;
	for (int i = 0; i < n; i++) {
		if (r[i] - l[i] + 1 >= tav)
			ans[ind]++;
		else {
			int x = l[i] % tav;
			int y = r[i] % tav;
			if (x <= y) {
				L.push_back(x), R.push_back(y);
			} else {
				L.push_back(x);
				R.push_back(tav - 1);
				L.push_back(0);
				R.push_back(y);
			}
		}
	}
	vector<int> all;
	for (auto x: L)
		all.push_back(x);
	for (auto y: R) {
		all.push_back(y);
		all.push_back(y + 1);
	}
	sort(all.begin(), all.end());
	all.resize(unique(all.begin(), all.end()) - all.begin());
	int sz = (int)(all.size());
	int szL = (int)(L.size());
	vector<int> pt(sz + 1);
	for (int i = 0; i < szL; i++) {
		L[i] = lower_bound(all.begin(), all.end(), L[i]) - all.begin();
		R[i] = lower_bound(all.begin(), all.end(), R[i]) - all.begin();
		pt[L[i] + 1]++;
		pt[R[i] + 2]--;
	}
	int mx = 0;
	for (int i = 1; i <= sz; i++) {
		pt[i] += pt[i - 1];
		mx = max(mx, pt[i]);
	}
	ans[ind] += mx;
}
 
int main() {
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> l[i] >> r[i];
	for (int i = 0; i <= 30; i++) 
		solve(i);
	int Q;
	cin >> Q;
	while (Q--) {
		int w, i = 0;
		cin >> w;
		while (w % 2 == 0) {
			w /= 2;
			i++;
		}
		cout << ans[i] << '\n';
	}
	return 0;
}
