#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 100;
int par[N], n, m;
vector<pair<int, long long>> adj[N];
bool vis[N];
long long dist[N];
set<pair<long long, pair<int, int>>> s;
 
void add(int v) {
	vis[v] = true; 
	for (auto u: adj[v])
		if (!vis[u.first])
			s.insert({dist[v] + u.second, {v, u.first}});
}
 
void aslanBfs(int root) {
	add(root);
	while (s.size()) {
		auto it = s.begin();
		int v = (*it).second.first, u = (*it).second.second;
		if (!vis[u]) {
			par[u] = v;
			dist[u] = (*it).first;
			add(u);
		}
		else 
			s.erase(it);
	}
}
 
void print(int v) {
	if (par[v])
		print(par[v]);
	cout << v << ' ';
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	for (int i = 0, v, u, w; i < m; i++) {
		cin >> v >> u >> w;
		adj[v].push_back({u, w});
		adj[u].push_back({v, w});
	}
	aslanBfs(1);
	if (!par[n])
		return cout << -1 << endl, 0;
	print(n);
	cout << endl;
	return 0;
}
