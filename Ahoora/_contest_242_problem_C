#include<bits/stdc++.h>
using namespace std;
 
set<pair<int, int>> s;
int dx[8] = {1, -1, 0, 0, -1, 1, 1, -1}, dy[8] = {0, 0, -1, 1, 1, -1, 1, -1};
 
bool allowed(int x, int y) {
	return s.find({x, y}) != s.end();
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int x0, y0, x1, y1, n;
	cin >> x0 >> y0 >> x1 >> y1 >> n;
	for (int i = 1, r, a, b; i <= n; i++) {
		cin >> r >> a >> b;
		for (int i = a; i <= b; i++)
			s.insert({r, i});
	}
	queue<pair<pair<int, int>, int>> q;
	q.push({{x0, y0}, 0}), s.erase({x0, y0});
	while (q.size()) {
		pair<pair<int, int>, int> x = q.front();
		q.pop();
		if (x.first.first == x1 && x.first.second == y1)
			return cout << x.second << endl, 0;
		for (int i = 0; i < 8; i++) {
			int nx = x.first.first + dx[i], ny = x.first.second + dy[i];
			if (allowed(nx, ny))
				q.push({{nx, ny}, x.second + 1}), s.erase({nx, ny});
		}
	}
	cout << -1 << endl;
	return 0;
}
