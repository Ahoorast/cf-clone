#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 1000 + 10;
int nxt[N], prv[N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	string s;
	cin >> s;
	int n = s.size();
	nxt[0] = 1, nxt[1] = n + 1, prv[1] = 0, prv[0] = -1;
	int lst = 1;
	for (int i = 0; i + 1 < n; i++) {
		if (s[i] == 'l') {
			nxt[prv[lst]] = i + 2;
			nxt[i + 2] = lst;
			prv[i + 2] = prv[lst];
			prv[lst] = i + 2;
			lst = i + 2;
		}
		else {
			prv[nxt[lst]] = i + 2;
			nxt[i + 2] = nxt[lst];
			prv[i + 2] = lst;
			nxt[lst] = i + 2;
			lst = i + 2;
		}
	}
	vector<int> ans;
	int st = 1;
	while (st) {
		ans.push_back(st);
		st = prv[st];
	}
	reverse(ans.begin(), ans.end());
	st = nxt[1];
	while (st <= n) {
		ans.push_back(st);
		st = nxt[st];
	}
	for (auto x: ans)
		cout << x << '\n';
	return 0;
}
