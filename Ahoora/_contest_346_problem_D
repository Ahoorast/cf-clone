#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 1000 + 10;
int n, m, deg[N], d[N], mx[N];
vector<int> adj[N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	for (int i = 1, v, u; i <= m; i++) {
		cin >> v >> u;
		adj[u].push_back(v);
		deg[v]++;
	} 
	for (int i = 1; i <= n; i++)
		d[i] = 1 << 30, mx[i] = 0;
	int s, t;
	cin >> s >> t;
	set<pair<int, int>> q;
	q.insert({d[t] = 0, t});
	while (q.size()) {
		auto it = *q.begin();
		q.erase(q.begin());
		int v = it.second;
		for (auto u: adj[v]) {
			deg[u]--;
			mx[u] = max(mx[u], d[v]);
			if (deg[u] == 0) {
				if (mx[u] < d[u]) {
					q.erase({d[u], u});
					d[u] = mx[u];
					q.insert({d[u], u});
				}
			} 
			if (d[v] + 1 < d[u]) {
				q.erase({d[u], u});
				d[u] = d[v] + 1;
				q.insert({d[u], u});
			}
		}
	}
	cout << (d[s] < 1 << 30? d[s]: -1) << '\n';
	return 0;
}
