#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 100;
int n, m, k, s1, s2, f, from[N], to[N], we[N], r[N], par[N];
vector<int> adj[N];
long long d[N];
bool vis[N];
 
void dij() {
	set<pair<long long, int>> q;
	fill(d, d + N, 1LL << 60);
	q.insert({d[f] = 0, f});
	while (q.size()) {
		auto it = *q.begin();
		q.erase(q.begin());
		int v = it.second;
		for (auto i: adj[v]) {
			int u = from[i] + to[i] - v;
			int w = we[i];
			if (d[u] > d[v] + w) {
				q.erase({d[u], u});
				par[u] = i;
				q.insert({d[u] = w + d[v], u});
			}
		}
	}
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m >> k >> s1 >> s2 >> f;
	for (int i = 0; i < m + k; i++) {
		cin >> from[i] >> to[i] >> we[i];
		if (i >= m)
			cin >> r[i];
		adj[to[i]].push_back(i);
	}
	dij();
	int v = s1;
	while (v != f) {
		vis[par[v]] = true;
		v = from[par[v]] + to[par[v]] - v;
	}
	for (int i = m; i < m + k; i++)
		if (!vis[i])
			we[i] = r[i];
	dij();
	if (d[s1] > d[s2])
		return cout << "LOSE\n", 0;
	cout << (d[s1] == d[s2]? "DRAW": "WIN") << '\n';
	for (int i = m; i < m + k; i++)
		cout << we[i] << ' ';
	cout << '\n';
	return 0;
}
