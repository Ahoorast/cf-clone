#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 10, M = 20;
int n, m, d, dp[(1 << M) + 10], mark[N], cnt[M + 2], in[M + 2];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m >> d;
	for (int i = 0, l; i < m; i++) {
		cin >> l;
		for (int j = 1, a; j <= l; j++)
			cin >> a, mark[a] = i;
	}
	for (int i = 1; i <= n; i++) {
		in[mark[i]]++;
		if (i > d)
			in[mark[i - d]]--;
		if (i >= d) {
			int msk = 0;
			for (int j = 0; j < m; j++)
				if (!in[j]) 
					msk |= 1 << j;
			dp[msk] = true;
		}
	}
	for (int i = (1 << m) - 1; i >= 1; i--)
		if (dp[i])
			for (int j = 0; j < m; j++)
				if (((1 << j) & i))
					dp[i ^ (1 << j)] = true;
	int ans = m;
	for (int i = 1; i < 1 << m; i++)
		if (!dp[i])
			ans = min(ans, __builtin_popcount(i));
	cout << ans << '\n';
	return 0;
}
