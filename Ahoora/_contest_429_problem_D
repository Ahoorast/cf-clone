#include<bits/stdc++.h>
using namespace std;
 
vector<pair<int, int>> p;
int n;
 
long long dis(pair<int, int> x, pair<int, int> y) {
	return 1LL * (x.first - y.first) * (x.first - y.first) + 1LL * (x.second - y.second) * (x.second - y.second);
}
 
long long solve(int l, int r) {
	if (r - l <= 5) {
		long long d = 1LL << 55;
		for (int i = l; i < r; i++)
			for (int j = i + 1; j < r; j++) 
				d = min(d, dis(p[i], p[j]));
		return d;
	}
	int mid = l + r >> 1;
	long long x = solve(l, mid), y = solve(mid, r);
	long long d = min(x, y);
	long long t = ceil(sqrt(d));
	int sz = 0;
	vector<pair<int, int>> vec;
	for (int i = l; i < r; i++)
		if (p[i].first >= p[mid].first - t || p[i].first <= p[mid].first + t)
			vec.push_back(p[i]), sz++;
	sort(vec.begin(), vec.end(), [] (pair<int, int> x, pair<int, int> y) {
			return x.second > y.second;
			});
	for (int i = 0; i < sz; i++)
		for (int j = i - 1; j >= i - 7 && j >= 0; j--) 
			d = min(d, dis(vec[i], vec[j]));
	return d;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1, sum = 0, a; i <= n; i++) {
		cin >> a;
		sum += a;
		p.push_back({sum, i});
	}
	sort(p.begin(), p.end());
	cout << solve(0, n) << '\n';
	return 0;
}
