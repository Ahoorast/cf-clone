#include<bits/stdc++.h>
using namespace std;
 
const int N = 510;
int n, m, mod, dp[N][N];
bool vis[N][N];
string s[N];
 
inline int inp() {
	int res = 0;
	char c = '0';
	while (c >= '0' && c <= '9') {
		((res *= 10) += c - '0');
		c = getchar();
	}
	return res;
}
 
int cal(int i, int j) {
	if (i == 0 && j == n)
		return 1;
	if (j > n || i > n || i < 0 || j < 0)
		return 0;
	if (i + j > n)
		return 0;
	if (vis[i][j])
		return dp[i][j];
	vis[i][j] = true;
	int z = n - i - j;
	(dp[i][j] += 1LL * z * (z - 1) / 2 % mod * cal(i + 2, j) % mod) %= mod;
	(dp[i][j] += 1LL * z * i % mod * cal(i, j + 1) % mod) %= mod;
	(dp[i][j] += 1LL * i * (i - 1) / 2 % mod * cal(i - 2, j + 2) % mod) %= mod;
	return dp[i][j];
}
 
int main() {
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	n = inp(), m = inp(), mod = inp();
	for (int i = 0; i < m; i++, getchar())
		for (int j = 0; j < n; j++)
			s[i] += getchar();
	int one = 0, two = 0;
	for (int i = 0; i < n; i++) {
		int cnt = 0;
		for (int j = 0; j < m; j++)
			cnt += s[j][i] - '0';
		if (cnt > 2)
			return cout << "0\n", 0;
		if (cnt == 1)
			one++;
		if (cnt == 2)
			two++;
	}
	int rest = n * 2 - two * 2 - one;
	if (rest & 1)
		return cout << "0\n", 0;
	if (m + rest / 2 != n)
		return cout << "0\n", 0;
	cout << cal(one, two) << '\n';
	return 0;
}
