#include <bits/stdc++.h>
using namespace std;
 
const int N = 200;
vector<int> adj[N][N];
int n, m;
bool mark[N][N];
 
void read() {
	cin >> n >> m;
	int a, b, c;
	for (int i = 0; i < m; i++) {
		cin >> a >> b >> c;
		adj[c][a].push_back(b);
		adj[c][b].push_back(a);
	}
}
 
bool dfs(int c, int v, int u) {
	mark[c][v] = true;
	if (v == u)
		return true;
	int res = false;
	for (auto it: adj[c][v])
		if (!mark[c][it])
			res |= dfs(c, it, u);
	return res;
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	read();
	int Q;
	cin >> Q;
	while (Q--) {
		int v, u, ans = 0;
		cin >> v >> u;
		for (int i = 1; i <= m; i++)
			ans += dfs(i, v, u);
		for (int i = 1; i <= m; i++)
			for (int j = 1; j <= n; j++)
				mark[i][j] = false;
		cout << ans << endl;
	}
	return 0;
}
