#include <bits/stdc++.h>
using namespace std;
 
const int N = 6 * 1000 * 100 + 100;
int trie[N][26], cnt, sz;
bool mark[N];
string s;
 
void insert(string s) {
	int j = 0;
	for (int i = 0; i < s.size(); i++) {
		if (!trie[j][s[i] - 'a'])
			trie[j][s[i] - 'a'] = ++cnt;
		j = trie[j][s[i] - 'a'];
	}
	mark[j] = true;
}
 
bool query(int index, int startNode, bool changed) {
	int j = startNode;
	if (index >= sz)
		return changed;
	if (changed) {
		if (index < sz)  {
			if (trie[startNode][s[index] - 'a'])
				return query(index + 1, trie[startNode][s[index] - 'a'], changed);
			return false;
		}
		return mark[startNode];
	}
	bool res = false;
	for (int i = 0; i < 26; i++)
		if (i != s[index] - 'a' && trie[startNode][i])
			res |= query(index + 1, trie[startNode][i], 1);
		else if (index < sz && trie[startNode][i])
			res |= query(index + 1, trie[startNode][i], 0);
	return res;
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		cin >> s, insert(s);
	while (m--) {
		cin >> s;
		sz = s.size();
		cout << (query(0, 0, 0)? "YES": "NO") << endl;
	}
	return 0;
}
