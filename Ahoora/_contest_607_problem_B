#include <bits/stdc++.h>
using namespace std;
 
const int N = 510;
int dp[N][N], c[N], n;
 
void read() {
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> c[i], dp[i][i] = 1;
	for (int i = 1; i + 1 <= n; i++)
		dp[i][i + 1] = 2 - (c[i] == c[i + 1]);
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	read();
	for (int i = n; i >= 1; i--)
		for (int j = i + 2; j <= n; j++) {
			dp[i][j] = dp[i][j - 1] + 1;
			if (c[i] == c[j])
				dp[i][j] = min(dp[i + 1][j - 1], dp[i][j]);
			for (int k = i; k < j; k++)
				dp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j]);
			for (int k = i + 1; k + 1 < j; k++) 
				if (c[k] == c[j])
					dp[i][j] = min(dp[i][j], dp[i][k - 1] + dp[k + 1][j - 1]);
		}
	cout << dp[1][n] << endl;
	return 0;
}
