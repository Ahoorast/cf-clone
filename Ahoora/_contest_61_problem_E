#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
 
#define indexed_set tree<int, null_type, less_equal<int>, rb_tree_tag,tree_order_statistics_node_update>
 
using namespace __gnu_pbds;
using namespace std;
 
const int N = 1000 * 1000 + 10;
int a[N], n, r[N];
indexed_set prv, nxt;
 
int main() { 
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = n - 1; i > 1; i--) {
		nxt.insert(a[i]);
		r[i - 1] = nxt.order_of_key(a[i - 1]);
	}
	long long ans = 0;
	for (int i = 0; i < n; i++) {
		ans +=  1LL * r[i] * ((int)(prv.size()) - prv.order_of_key(a[i] + 1));
		prv.insert(a[i]);
	}
	cout << ans << '\n';
	return 0;
}
