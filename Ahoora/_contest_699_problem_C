#include <bits/stdc++.h>
using namespace std;
 
typedef 		long long		 		ll;
typedef 		unsigned long long 		ull;
 
#define			sep						' '
 
const int N = 200;
const int INF = 1ll * 1000 * 1000;
int dp[N][4], a[N], n;
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	dp[0][0] = 1;
	if (a[0] == 0)
		dp[0][1] = dp[0][2] = INF;
	if (a[0] == 1)
		dp[0][1] = INF;
	if (a[0] == 2)
		dp[0][2] = INF;
	for (int i = 1; i < n; i++) {
		if (a[i] == 0) {
			dp[i][1] = dp[i][2] = INF;
			dp[i][0] = min(min(dp[i - 1][0], dp[i - 1][1]), dp[i - 1][2]) + 1;
		}
		else if (a[i] == 1) {
			dp[i][1] = INF;
			dp[i][2] = min(dp[i - 1][0], dp[i - 1][1]);
			dp[i][0] = min(min(dp[i - 1][0], dp[i - 1][1]), dp[i - 1][2]) + 1;
		}
		else if (a[i] == 2) {
			dp[i][2] = INF;
			dp[i][1] = min(dp[i - 1][0], dp[i - 1][2]);
			dp[i][0] = min(min(dp[i - 1][0], dp[i - 1][1]), dp[i - 1][2]) + 1;
		}
		else if (a[i] == 3) {
			dp[i][1] = min(dp[i - 1][0], dp[i - 1][2]);
			dp[i][0] = min(min(dp[i - 1][0], dp[i - 1][1]), dp[i - 1][2]) + 1;
			dp[i][2] = min(dp[i - 1][0], dp[i - 1][1]);
		}
	}
	cout << min(min(dp[n - 1][0], dp[n - 1][1]), dp[n - 1][2]) << endl;
	return 0;
}
