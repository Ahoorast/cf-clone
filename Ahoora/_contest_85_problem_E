#include<bits/stdc++.h>
using namespace std;
 
const int N = 5010, mod = 1LL * 1000 * 1000 * 1000 + 7;
int n, col[N], x[N], y[N], res;
int mid;
 
void dfs(int v, int c = 0) {
	col[v] = c + 1;
	for (int u = 0; u < n; u++)
		if (abs(x[v] - x[u]) + abs(y[v] - y[u]) > mid) {
			if (!col[u])
				dfs(u, (c + 1) % 2);
			else if (col[v] == col[u])
				res = 0;
		}
}
 
int check() {
	for (int i = 0; i < n; i++)
		col[i] = 0;
	res = 1;
	for (int i = 0; i < n; i++)
		if (!col[i]) {
			dfs(i);
			res = 1LL * res * 2 % mod;
		}
	return res;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d%d", &x[i], &y[i]);
	int l = -1, r = 2e4 + 10;
	for (int i = 0; i < 15; i++) {
		mid = l + r >> 1;
		if (check())
			r = mid;
		else
			l = mid;
	}
	mid = r;
	printf("%d\n%d\n", r, check());
	return 0;
}
