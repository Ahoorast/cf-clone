#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 100;
long long n, x, K, a[N];
 
int get(long long x) {
	int i = upper_bound(a + 1, a + n + 1, x) - a;
	while (a[i] > x)
		i--;
	return i;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> x >> K;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	sort(a + 1, a + n + 1);
	a[n + 1] = 1LL << 55;
	long long ans = 0;
	for (int i = n; i >= 1; i--) {
		long long l = (K? a[i] + (a[i] % x == 0? 0: (x - (a[i] % x))) + K * x - x: a[i]);
		long long r = (K? l + x - 1: a[i] + (a[i] % x == 0? 0: (x - (a[i] % x))) - 1);
		ans += max(get(r) - get(l - 1), 0);
	}
	cout << ans << endl;
	return 0;
}
