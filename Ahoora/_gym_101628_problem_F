#include<bits/stdc++.h>
using namespace std;
 
const long long N = 3 * 10000 + 100;
long long n, m, T, K, P, d[N], par[N];
vector<pair<long long, long long>> adj[N];
bool mark[N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m >> T >> K >> P;
	T *= 60;
	for (long long i = 0, v; i < P; i++) {
		cin >> v;
		mark[v] = true;
	}
	for (long long i = 0, v, u, w; i < m; i++) {
		cin >> v >> u >> w;
		w *= 60;
		adj[v].push_back({u, w + mark[u] * K});
	}
	fill(d, d + n + 1, T + 10);
	set<pair<long long, long long>> q;
	q.insert({d[1] = 0, 1});
	while (q.size()) {
		auto it = *q.begin();
		q.erase(q.begin());
		long long v = it.second;
		for (auto u: adj[v]) 
			if (d[u.first] > u.second + d[v]) {
				q.erase({d[u.first], u.first});
				par[u.first] = v;
				q.insert({d[u.first] = u.second + d[v], u.first});
			}
	}
	cout << (d[n] <= T? d[n]: -1) << '\n';
	return 0;
}
