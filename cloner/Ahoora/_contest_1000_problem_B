#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 100;
long long s[N], n, M, a[N], s1[N], sum[N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> M;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	a[n + 1] = M;
	for (int i = n; i >= 0; i--) {
		if (i & 1)
			s[i] = s[i + 1], s1[i] = s1[i + 1] + a[i + 1] - a[i];
		else
			s[i] = s[i + 1] + a[i + 1] - a[i], s1[i] = s1[i + 1];
	}
	for (int i = 1; i <= n; i++)
		if (i & 1)
			sum[i] = sum[i - 1] + a[i] - a[i - 1];
		else
			sum[i] = sum[i - 1];
	long long ans = s[0];
	for (int i = n; i >= 0; i--) {
		if (i & 1 && a[i] + 1 < a[i + 1] && a[i] + 1 < M)
			ans = max(ans, sum[i] + a[i + 1] - a[i] - 1 + s1[i + 1]);//, cout << sum[i] + a[i + 1] - a[i] - 1 + s1[i] << endl;
		else if (a[i + 1] - 1 > a[i] && a[i + 1] - 1 > 0) {
			ans = max(ans, sum[i] + a[i + 1] - 1 - a[i] + s1[i]);
		}
	}
	cout << ans << endl;
	return 0;
}
