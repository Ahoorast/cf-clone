#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 + 10, mod = 998244353;
long long c[N][N], a[N], n, dp[N];
 
long long C(int r, int n) {
	if (n == r || r == 0)
		return 1;
	if (r > n || r < 0)
		return 0;
	if (c[r][n] > 0)
		return c[r][n];
	c[r][n] = (C(r - 1, n - 1) + C(r, n - 1)) % mod;
	return c[r][n];
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	dp[n + 1] = 1;
	for (int i = n; i >= 1; i--) {
		dp[i] = dp[i + 1];
		if (a[i] > 0 && a[i] + 1 <= n - i + 1) 
			for (int j = i + 1; j <= n; j++)
				if (a[i] - 1 <= j - i - 1)
					(dp[i] += dp[j + 1] * C(a[i] - 1, j - i - 1) % mod) %= mod;
	}
	dp[1] = (((dp[1] - 1) % mod) + mod) % mod;
	cout << dp[1] << endl;
	return 0;
}
