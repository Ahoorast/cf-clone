#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 10;
int a[N], n;
vector<int> adj[N];
string win;
 
void dfs(int root) {
	win[root] = 'B';
	for (auto u: adj[root]) 
		if (win[u] == '?') {
			dfs(u);
			if (win[u] == 'B')
				win[root] = 'A';
		}
		else if (win[u] == 'B')
			win[root] = 'A';
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	for (int i = 0; i <= n; i++)
		win += '?';
	for (int i = 1; i <= n; i++)
		for (int t = -1; t <= 1; t += 2)
			for (int j = i + t * a[i]; j <= n && j >= 1; j += t * a[i])
				if (a[j] > a[i])
					adj[i].push_back(j);
	for (int i = 1; i <= n; i++)
		if (win[i] == '?')
			dfs(i);
	for (int i = 1; i <= n; i++)
		cout << win[i];
	cout << endl;
	return 0;
}
