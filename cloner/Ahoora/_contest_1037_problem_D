#include <bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 100;
set<int> adj[N];
int n, p[N];
 
void read() {
	cin >> n;
	for (int i = 1; i < n; i++) {
		int v, u;
		cin >> v >> u;
		adj[v].insert(u);
		adj[u].insert(v);
	}
	for (int i = 1; i <= n; i++)
		cin >> p[i];
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	read();
	queue<int> q;
	if (p[1] != 1)
		return cout << "No" << endl, 0;
	q.push(p[1]);
	int r = 2;
	while (q.size()) {
		while (q.size() && adj[q.front()].size() == 0)
			q.pop();
		if (q.size() == 0)
			return cout << "Yes" << endl, 0;
		int v = q.front();
		if (adj[v].find(p[r]) != adj[v].end()) 
			adj[v].erase(p[r]), adj[p[r]].erase(v), q.push(p[r]), r++;
		else if (q.size())
			return cout << "No" << endl, 0;
	}
	cout << "Yes" << endl;
	return 0;
}
