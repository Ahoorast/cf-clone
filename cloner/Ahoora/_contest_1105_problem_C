#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10, mod = 1LL * 1000 * 1000 * 1000 + 7;
int n, l, r, cnt[3], dp[N][3];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> l >> r;
	cnt[0] = cnt[1] = cnt[2] += r / 3;
	for (int i = 0; i < r % 3; i++)
		cnt[(i + 1) % 3]++;
	l--;
	cnt[0] -= l / 3, cnt[1] -= l / 3, cnt[2] -= l / 3;
	for (int i = 0; i < l % 3; i++)
		cnt[(i + 1) % 3]--;
	dp[0][0] = 1;
	for (int i = 1; i <= n; i++)
		for (int j = 0; j < 3; j++)
			for (int k = 0; k < 3; k++)
				(dp[i][j] += 1LL * cnt[k] * dp[i - 1][((j - k) % 3 + 3) % 3] % mod) %= mod;
	cout << dp[n][0] << endl;
	return 0;
}
