#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 10;
long long sx[N], sy[N], x[3], y[3], n;
 
bool check(long long l) {
	long long tx = l / n * sx[n] + x[1] + sx[l % n], ty = l / n * sy[n] + y[1] + sy[l % n];
	return abs(tx - x[2]) + abs(ty - y[2]) <= l;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> x[1] >> y[1] >> x[2] >> y[2] >> n;
	for (int i = 1; i <= n; i++) {
		char c;
		cin >> c;
		sx[i] = sx[i - 1], sy[i] = sy[i - 1];
		if (c == 'R')
			sx[i]++;
		else if (c == 'L')
			sx[i]--;
		else if (c == 'U')
			sy[i]++;
		else
			sy[i]--;
	}
	if (x[1] == x[2] && y[1] == y[2])
		return cout << 0 << endl, 0;
	long long l = 1, r = 1LL << 55; 
	while (l < r) {
		long long mid = l + r >> 1;
		if (check(mid))
			r = mid;
		else
			l = mid + 1;
	}
	cout << (l < 1LL << 55? l: -1) << endl;
	return 0;
}
