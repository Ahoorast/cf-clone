#include<bits/stdc++.h>
using namespace std;
 
const int N = 3010;
int n, m, a, b, g[N * N];
 
vector<int> min(vector<int> vec, int len) {
	deque<int> dq;
	int sz = (int)(vec.size());
	vector<int> ans;
	for (int i = 0; i < sz; i++) {
		while (dq.size() && dq.back() > vec[i])
			dq.pop_back();
		dq.push_back(vec[i]);
		if (i - len >= 0 && dq.front() == vec[i - len])
			dq.pop_front();
		if (i >= len - 1)
			ans.push_back(dq.front());
	}
	return ans;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m >> a >> b;	
	vector<vector<int>> h(n, vector<int>(m, 0));
	int x, y, z;
	cin >> g[0] >> x >> y >> z;
	for (int i = 1; i < n * m; i++)
		g[i] = (1LL * g[i - 1] * x + y) % z;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			h[i][j] = g[i * m + j];
	vector<vector<int>> mns;
	for (int i = 0; i < n; i++) 
		mns.push_back(min(h[i], b));
	long long ans = 0;
	for (int j = 0; j < m - b + 1; j++) {
		vector<int> vec;
		for (int i = 0; i < n; i++)
			vec.push_back(mns[i][j]);
		vector<int> add = min(vec, a);
		for (auto x: add)
			ans += x;
	}
	cout << ans << '\n';
	return 0;
}
