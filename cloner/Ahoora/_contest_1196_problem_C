#include <bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 100, inf = 1000 * 100;
int n, x[N], y[N];
bool f[N][4];
 
void solve() {
	int lx = -inf, rx = inf;
	for (int i = 1; i <= n; i++) 
		if (!(f[i][0] && f[i][2])) {
			if (!f[i][0]) 
				lx = max(lx, x[i]);
			if (!f[i][2])
				rx = min(rx, x[i]);
		}
	int ry = -inf, ly = inf;
	for (int i = 1; i <= n; i++)
		if (!(f[i][1] && f[i][3])) {
			if (!f[i][1])
				ly = min(ly, y[i]);
			if (!f[i][3])
				ry = max(ry, y[i]);
		}
	if (rx >= lx && ry <= ly)
		cout << 1 << ' ' << ' ' << lx << ' ' <<  ly << endl;
	else
		cout << 0 << endl;
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		cin >> n;
		for (int i = 1; i <= n; i++) {
			cin >> x[i] >> y[i];
			for (int j = 0; j < 4; j++)
				cin >> f[i][j];
		}
		solve();
	}
	return 0;
}
