#include<bits/stdc++.h>
using namespace std;
 
const int N = 20;
int n, m, adj[N], lg[(1 << N) + 10];
long long dp[(1 << N) + 10][N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	for (int i = 2; i < 1 << N; i++)
		lg[i] = lg[i / 2] + 1;
	cin >> n >> m;
	for (int i = 0, v, u; i < m; i++) {
		cin >> v >> u;
		--v, --u;
		adj[v] |= 1 << u, adj[u] |= 1 << v;
	}
	for (int i = 0; i < n; i++)
		dp[1 << i][i] = 1;
	long long ans = 0;
	for (int msk = 1; msk < 1 << n; msk++) {
		int v = msk & (-msk);
		v = lg[v];
		for (int u = 0; u < n; u++) 
			for (int lst = 0; lst < n; lst++)
				if ((msk & (1 << u)) && (msk & (1 << lst)) && (adj[u] & (1 << lst)) && (u > v))
					dp[msk][u] += dp[msk ^ (1 << u)][lst];
		for (int u = 0; u < n; u++)
			if (((1 << u) & msk) && (adj[v] & (1 << u)) && __builtin_popcount(msk) > 2) 
				ans += dp[msk][u];
	}
	cout << ans / 2 << '\n';
	return 0;
}
