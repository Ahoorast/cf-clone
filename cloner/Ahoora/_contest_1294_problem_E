#include <bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 100;
int n, m, cnt[N];
vector<vector<int>> A;
 
void read() {
	cin >> n >> m;
	vector<int> vec;
	for (int i = 1; i <= m + 10; i++)
		vec.push_back(0);
	A.push_back(vec);
	for (int i = 1; i <= n; i++) {
		vector<int> v;
		v.push_back(0);
		for	(int j = 1; j <= m; j++) {
			int a;
			cin >> a;
			v.push_back(a);
		}
		A.push_back(v);
	}
}
 
int solveCol(int x) {
	for (int i = 1; i <= n; i++) {
		if (A[i][x] % m != x % m)
			;
		else {
			int pos = A[i][x] / m + (x != m);
			if (A[i][x] <= n * m)
				cnt[(i >= pos? i - pos: i + n - pos)]++;
		}
	}
	int res = n;
	for (int i = 0; i < n; i++) {
		res = min(res, i + n - cnt[i]);
		cnt[i] = 0;
	}
	return res;
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	read();
	int ans = 0;
	for (int i = 1; i <= m; i++)
		ans += solveCol(i);
	cout << ans << endl;
	return 0;
}
