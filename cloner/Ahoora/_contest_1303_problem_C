#include<bits/stdc++.h>
using namespace std;
 
const int N = 210;
set<int> adj[26];
string s;
deque<char> ans;
int sz;
bool vis[26];
 
void build() {
	for (int i = 0; i < sz; i++) {
		if (i - 1 >= 0) {
			int v = s[i - 1] - 'a', u = s[i] - 'a';
			adj[v].insert(u);
			adj[u].insert(v);
		}
		if (i + 1 < sz) {
			int v = s[i] - 'a', u = s[i + 1] - 'a';
			adj[v].insert(u);
			adj[u].insert(v);
		}
	}
}
 
bool res = true;
 
void dfs(int root, int par = -1) {
	vis[root] = true;
	ans.push_back(root + 'a');
	for (auto u: adj[root])
		if (!vis[u]) 
			dfs(u, root);
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		cin >> s;
		sz = s.size();
		for (int i = 0; i < 26; i++)
			adj[i].clear(), vis[i] = false;
		ans.clear();
		res = true;
		build();
		int mx = 0, mn = 30, v = 0;
		for (int i = 0; i < 26; i++) {
			int x = adj[i].size();
			if (mx < x)
				mx = x, v = i;
		}
		if (mx > 2)
			cout << "NO" << endl;
		else {
			for (int i = 0; i < 26; i++)
				if (!vis[i] && adj[i].size() < 2)
					dfs(i);
			if (ans.size() == 26) {
				cout << "YES" << endl;
				for (auto it: ans)
					cout << it;
				cout << endl;
			}
			else
				cout << "NO" << endl;
		}
	}
	return 0;
}
