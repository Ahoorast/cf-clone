#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10;
int n, K, a[N], cnt[N << 2];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		int ans = 1 << 30;
		cin >> n >> K;
		for (int i = 1; i <= n; i++)
			cin >> a[i];
		vector<int> L, R;
		L.push_back(-1), R.push_back(-1);
		for (int i = 1; i <= n / 2; i++) {
			L.push_back(min(1 + a[i], 1 + a[n - i + 1]));
			R.push_back(max(K + a[i], K + a[n - i + 1]));
			cnt[a[n - i + 1] + a[i]]++;
		}
		sort(L.begin(), L.end()), sort(R.begin(), R.end());
		R.push_back(2 * K  + 1), L.push_back(2 * K + 1);
		for (int s = 2; s <= 2 * K; s++) {
			int l, r;
			l = lower_bound(R.begin(), R.end(), s) - R.begin();
			while (R[l] >= s)
				l--;
			r = upper_bound(L.begin(), L.end(), s) - L.begin();
			r = max(0, n / 2 - r + 1);
			ans = min(ans, (r + l) * 2 + (n / 2 - r - l - cnt[s]));
		}
		for (int i = 1; i <= n / 2; i++)
			cnt[a[i] + a[n - i + 1]]--;
		cout << ans << endl;
	}
	return 0;
}
