#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10;
int L[N][3], R[N][3];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		string s;
		cin >> s;
		int n = s.size();
		for (int i = 0; i < n; i++)
			s[i]--;
		for (int i = 0; i <= n; i++)
			for (int j = 0; j < 2; j++)
				L[i][j] = R[i][j] = -1;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < 2; j++)
				if (s[i] - '0' == j)
					L[i][j] = i;
				else if (i)
					L[i][j] = L[i - 1][j];
		for (int i = n - 1; i >= 0; i--)
			for (int j = 0; j < 2; j++)
				if (s[i] - '0' == j)
					R[i][j] = i;
				else if (i < n - 1)
					R[i][j] = R[i + 1][j];
		int ans = n + 10;
		for (int i = 0; i < n; i++)
			if (s[i] == '2') {
				if (L[i][0] != -1 && R[i][1] != -1)
					ans = min(ans, R[i][1] - L[i][0] + 1);
				if (L[i][1] != -1 && R[i][0] != -1)
					ans = min(ans, R[i][0] - L[i][1] + 1);
				if (L[i][0] != -1 && L[i][1] != -1)
					ans = min(ans, i - min(L[i][0], L[i][1]) + 1);
				if (R[i][0] != -1 && R[i][1] != -1)
					ans = min(ans, max(R[i][0], R[i][1]) - i + 1);
			}
		cout << (ans <= n? ans: 0) << '\n';
	}
	return 0;
}
