#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 10;
int n, p, a[N], c[(N << 1) + 100], cnt[(N << 2)];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> p;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	sort(a, a + n);
	int L = 0;
	for (int i = 0; i < n; i++)
		L = max(L, a[i] - i);
	for (int i = 0; i < n; i++)
		a[i] -= L;
	for (int i = 0; i < n; i++)
		c[max(a[i], 0)] = i + 1;
	for (int i = 1; i <= n * 2 + a[n - 1]; i++)
		c[i] = max(c[i], c[i - 1]);
	for (int i = 0; i < n; i++) {
		cnt[((i - c[i]) % p + p) % p]++;
	//	cout << (i - c[i]) % p << ' ';
	}
//	cout << '\n';
//	cout << "HI" << cnt[1] << '\n';
	vector<int> ans;
	for (int i = 0; i <= n + a[n - 1]; i++) {
		//if (i == 1)
		//	cout << cnt[1] << '\n';
		if (!cnt[i % p])
			ans.push_back(L + i);
		cnt[((i - c[i]) % p + p) % p]--;
		cnt[((i + n - c[i + n]) % p + p) % p]++;
	}
	cout << (int)(ans.size()) << '\n';
	for (auto x: ans)
		cout << x << ' ';
	cout << '\n';
	return 0;
}
// 0 1 2
