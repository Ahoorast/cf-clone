#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 10;
long long n, d, m, a[N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> d >> m;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	vector<long long> vec[2];
	for (int i = 1; i <= n; i++)
		if (a[i] > m)
			vec[0].push_back(a[i]);
		else
			vec[1].push_back(a[i]);
	sort(vec[0].begin(), vec[0].end());
	sort(vec[1].begin(), vec[1].end());
	reverse(vec[0].begin(), vec[0].end());
	int sz0 = (int)(vec[0].size()), sz1 = (int)(vec[1].size());
	for (int i = 1; i < sz0; i++)
		vec[0][i] += vec[0][i - 1];
	for (int i = 1; i < sz1; i++)
		vec[1][i] += vec[1][i - 1];
	long long ans = (sz1 > 0? vec[1][sz1 - 1]: 0);
	if (sz0)
		ans = max(ans, vec[0][0]);
	for (int k = 1; k <= sz0; k++) {
		long long t = 1LL * (k - 1) * d;
		if (k + t > n) 
			continue;
		long long res = 0;
		res += vec[0][k - 1];
		t -= (sz0 - k);
		if (sz1)
			res += (vec[1][sz1 - 1] - (t <= 0? 0: vec[1][t - 1]));
		ans = max(ans, res);
	}
	cout << ans << '\n';
	return 0;
}
