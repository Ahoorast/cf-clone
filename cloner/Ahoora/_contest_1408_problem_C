#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 100;
int n, l;
double a[N];
 
double TM(double d, double v) {
	return d / v;
}
 
double cal(double F, double v1, double S, double v2) {
	return abs(F - S) / (v1 + v2);
}
 
void solve() {
	cin >> n >> l;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	int L = 0, R = n - 1;
	double v1 = 1, v2 = 1;
	double F = 0, S = l, ans = 0;
	while (true) {
		while (a[L] <= F && L < n)
			L++;
		while (R >= 0 && a[R] >= S)
			R--;
		if (L > R) {
			cout << cal(F, v1, S, v2) + ans << '\n';
			return;
		}
		double t1 = TM(abs(F - a[L]), v1);
		double t2 = TM(abs(S - a[R]), v2);
		if (t1 < t2) {
			F = a[L], v1++;
			S -= v2 * t1;
			ans += t1;
		}
		if (t2 < t1) {
			S = a[R], v2++;
			F += v1 * t2;
			ans += t2;
		}
		if (t1 == t2) {
			F = a[L], S = a[R];
			v1++, v2++;
			ans += t1;
		}
	}
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cout << setprecision(6) << fixed;
	int Q;
	cin >> Q;
	while (Q--)
		solve();
	return 0;
}
