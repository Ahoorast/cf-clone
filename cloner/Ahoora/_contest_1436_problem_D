#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000  * 100 + 10;
int n;
long long a[N], sz[N];
vector<int> adj[N];
 
void dfs(int v) {
	bool cld = false;
	for (auto u: adj[v]) {
		dfs(u);
		sz[v] += sz[u];
		a[v] += a[u];
		cld = true;
	}
	sz[v] += !cld;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 2, p; i <= n; i++) {
		cin >> p;
		adj[p].push_back(i);
	}
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	dfs(1);	
	long long ans = 0;
	for (int i = 1; i <= n; i++)
		ans = max(ans, (a[i] + sz[i] - 1) / (sz[i]));
	cout << ans << '\n';
	return 0;
}
