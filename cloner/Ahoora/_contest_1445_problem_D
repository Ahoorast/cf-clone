#include<bits/stdc++.h>
using namespace std;
 
const int N = 3 * 1000 * 100 + 100, mod = 998244353; 
int n, a[N], fact[N], inv[N];
 
long long Pow(long long a, long long b) {
	return b? (b & 1? a: 1) % mod * Pow(a * a % mod, b >> 1) % mod: 1;
}
 
int C(int r, int n) {
	return 1LL * fact[n] * inv[r] % mod * inv[n - r] % mod;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	fact[0] = 1;
	for (int i = 1; i < N; i++)
		fact[i] = 1LL * fact[i - 1] * i % mod;
	inv[N - 1] = Pow(fact[N - 1], mod - 2);
	for (int i = N - 2; i >= 0; i--)
		inv[i] = 1LL * inv[i + 1] * (i + 1) % mod;
	cin >> n;
	n *= 2;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	sort(a, a + n);
	int s = 0;
	for (int i = n - 1, j = 0; i > j; i--, j++)
		(s += a[i] - a[j]) %= mod;
	cout << 1LL * s * C(n / 2, n) % mod << '\n';
	return 0;
}
