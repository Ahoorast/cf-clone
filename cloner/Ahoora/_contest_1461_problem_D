#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 10;
int n;
map<long long, bool> vis;
 
void solve(vector<int> a) {
	long long s = 0;
	int sz = (int)(a.size());
	int mx = 0, mn = 1 << 30;
	for (int i = 0; i < sz; i++) {
		s += a[i];
		mx = max(mx, a[i]);
		mn = min(mn, a[i]);
	}
	vis[s] = true;
	vector<int> l, r;
	int mid = (mx + mn) / 2;
	for (int i = 0; i < sz; i++)
		if (a[i] > mid)
			l.push_back(a[i]);
		else
			r.push_back(a[i]);
	if (r.empty() || l.empty())
		return;
	solve(l), solve(r);
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int T;
	cin >> T;
	while (T--) {
		vis.clear();
		int n, Q;
		cin >> n >> Q;
		vector<int> a(n);
		for (int i = 0; i < n; i++)
			cin >> a[i];
		solve(a);
		while (Q--) {
			int s;
			cin >> s;
			cout << (vis[s]? "Yes": "No") << '\n';
		}
	}
	return 0;
}
