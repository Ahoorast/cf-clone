#include<bits/stdc++.h>
using namespace std;
 
const int N = 5 * 1000 * 100 + 10, mod = 1LL * 1000 * 1000 * 1000 + 7;
int n, m, par[N];
 
long long Pow(long long a, long long b) {
	return b? (b & 1? a: 1) % mod * Pow(a * a % mod, b >> 1) % mod: 1;
}
 
int get_par(int v) {
	return par[v] == v? v: par[v] = get_par(par[v]);
}
 
bool Union(int v, int u) {
	v = get_par(v), u = get_par(u);
	if (v == u)
		return false;
	par[u] = v;
	return true;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	iota(par, par + m + 1, 0);
	vector<int> ans;
	for (int i = 0; i < n; i++) {
		int k, x, y = 0;
		cin >> k >> x;
		if (k > 1) 
			cin >> y;
		if (Union(x, y))
			ans.push_back(i);
	}
	cout << Pow(2, (int)(ans.size())) << ' ' << (int)(ans.size()) << '\n';
	for (auto i: ans)
		cout << i + 1 << ' ';
	cout << '\n';
	return 0;
}
