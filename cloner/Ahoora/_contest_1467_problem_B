#include<bits/stdc++.h>
using namespace std;
Â 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		int n;
		cin >> n;
		vector<double> a(n);
		for (auto &x: a)
			cin >> x;
		int ted = 0;
		vector<bool> mark(n);
		for (int i = 0; i < n; i++) 
			if (i - 1 >= 0 && i + 1 < n) 
				if ((a[i] > a[i + 1] && a[i] > a[i - 1]) || (a[i] < a[i + 1] && a[i] < a[i - 1]))
					mark[i] = true, ted++;
		int ans = ted;
		for (int i = 0; i < n; i++) {
			vector<double> pos;
			pos.push_back(-1), pos.push_back(1e9 + 1);
			if (i - 1 >= 0) {
				pos.push_back(a[i - 1]);
				pos.push_back(a[i - 1] + 0.5);
				pos.push_back(a[i - 1] - 0.5);
			}
			if (i + 1 < n) {
				pos.push_back(a[i + 1]);
				pos.push_back(a[i + 1] + 0.5);
				pos.push_back(a[i + 1] - 0.5);
			}
			double tmp = a[i];
			for (double x: pos) {
				int t = ted;
				a[i] = x;
				for (int j = i - 1; j <= i + 1; j++)
					if (j - 1 >= 0 && j + 1 < n) {
						if ((a[j] > a[j - 1] && a[j] > a[j + 1]) || (a[j] < a[j - 1] && a[j] < a[j + 1])) 
							t += !mark[j];
						else
							t -= mark[j];
					}
				ans = min(ans, t);
			}
			a[i] = tmp;
		}
		cout << ans << '\n';
	}
	return 0;
}
