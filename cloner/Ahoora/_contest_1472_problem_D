#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10;
pair<int, int> p[N];
vector<int> vec[N * 2], vc[N * 2];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> Q;
	while (Q--) {
		int n;
		cin >> n;
		vector<int> all;
		for (int i = 0; i < n; i++) {
			cin >> p[i].first >> p[i].second;
			all.push_back(p[i].first);
			all.push_back(p[i].second);
		}
		sort(all.begin(), all.end());
		all.resize(unique(all.begin(), all.end()) - all.begin());
		for (int i = 0; i < n; i++) {
			p[i].first = lower_bound(all.begin(), all.end(), p[i].first) - all.begin();
			p[i].second = lower_bound(all.begin(), all.end(), p[i].second) - all.begin();
		}
		for (int i = 0; i < n; i++) {
			vec[p[i].first].push_back(i);
			vc[p[i].second].push_back(i);
		}
		set<pair<int, int>> s, S;
		vector<int> ans(n, -2);
		for (int v = 0; v < n * 2; v++) {
			for (auto i: vec[v]) { 
				if (s.empty())
					continue;
				auto mn = *s.begin();
				if (mn.first < p[i].second)
					ans[i] = mn.second;
			}
			for (auto i: vc[v]) {
				if (s.empty())
					continue;
				auto mn = *s.begin();
				if (mn.first < p[i].first)
					ans[i] = mn.second;
			}
			for (auto i: vec[v]) {
				s.insert({p[i].second, i});
			}
		}
		for (auto x: ans)
			cout << x + 1 << ' ';
		cout << '\n';
		for (int i = 0; i < n * 2; i++)
			vec[i].clear(), vc[i].clear();
	}
	return 0;
}
