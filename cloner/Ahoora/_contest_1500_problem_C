#include<bits/stdc++.h>
using namespace std;
 
const int N = 1510;
int n, m, a[N][N], b[N][N], cnt[N];
bool mark[N], wall[N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			cin >> a[i][j];
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++) {
			cin >> b[i][j];
			cnt[j] += i && b[i - 1][j] > b[i][j];
		}
	vector<int> o;
	for (int i = 0; i < m + 10; i++) {
		int col = -1;
		for (int j = 0; j < m; j++)
			if (!mark[j] && cnt[j] == 0)
				col = j;
		if (col == -1)
			break;
		mark[col] = true;
		o.push_back(col);
		for (int i = 1; i < n; i++) {
			if (wall[i])
				continue;
			if (b[i - 1][col] < b[i][col]) {
				wall[i] = true;
				for (int j = 0; j < m; j++)
					cnt[j] -= b[i - 1][j] > b[i][j];
			}
		}
	}
	reverse(o.begin(), o.end());
	vector<int> pos(n);
	iota(pos.begin(), pos.end(), 0);
	for (auto col: o) {
		stable_sort(pos.begin(), pos.end(), [&](int x, int y) {
				return a[x][col] < a[y][col];
				});
	}
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			if (b[i][j] != a[pos[i]][j])
				return cout << "-1\n", 0;
	cout << (int)(o.size()) << '\n';
	for (auto col: o)
		cout << col + 1 << ' ';
	cout << '\n';
	return 0;
}
