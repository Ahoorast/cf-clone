#include <bits/stdc++.h>
using namespace std;
// #include <ext/pb_ds/assoc_container.hpp> 
// #include <ext/pb_ds/tree_policy.hpp> 
// using namespace __gnu_pbds; 
 
// #define ordered_set tree<pair <int, int>, null_type,greater<pair <int, int>>, rb_tree_tag,tree_order_statistics_node_update> 
 
const int MAXN = 1e5 + 3, MAXM = 2e3, MOD = 998244353, MOD1 = 1e9 + 9, SQ = 320;
const unsigned long long INF = 1e18 + 10;
int a[MAXN];
 
 
void solve() {
	int n;
	cin >> n;
	
	int cnt = 0;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		a[i] %= 3;
		
		if (a[i] == 0) {
			cnt++;
		}
	}
	
	if (cnt <= n / 2) {
		cout << 0 << '\n';
		int cnt1 = n / 2 - cnt;
		for (int i = 0; i < n; i++) {
			if (a[i] == 0)
				cout << 0;
			else if (cnt1) {
				cout << 0;
				cnt1--;
			}
			else
				cout << 1;
		}
		cout << '\n';
		return;
	}
	else {
		int cnt = n / 2;
		cout << 2 << '\n';
		for (int i = 0; i < n; i++) {
			if (a[i] == 0 && cnt) {
				cout << 0;
				cnt--;
			}
			else
				cout << 1;
		}
	}
	
	
}
 
int main() { 
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int q = 1;
//	cin >> q;
	
	while (q--) {
		solve();
	}
}
