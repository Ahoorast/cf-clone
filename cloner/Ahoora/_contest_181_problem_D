#include <bits/stdc++.h>
using namespace std;
 
const long long mod = 1ll * 1000 * 1000 * 1000 + 7;
const int N = 1000;
long long K, dp[N + 1][2][2];
string s, t;
 
int main() {
//	freopen("input.txt", "r", stdin);
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> s >> t >> K;
	if (K == 0)
		if (s == t)
			return cout << "1", 0;
		else
			return cout << "0", 0;
	int sz = s.size(), tz = t.size();
	for (int i = 1; i < sz; i++)
		dp[i][1][1] = 1;
	if (sz > 2) 
		for (int i = 0; i < sz; i++)
			dp[i][1][0] = sz - 1 - (i != 0);
	else
		dp[0][1][0] = 1;
	for (int j = 2; j <= K; j++)
		for (int i = 0; i < sz; i++) {
			bool b = j % 2;
			dp[i][b][0] = (dp[i][!b][0] * (sz - 2) + dp[i][!b][1] * (sz - 1)) % mod;
			dp[i][b][1] = dp[i][!b][0];
		}
	long long ans = 0;
	for (int i = 0; i < sz; i++)
		if (s.substr(i, sz) + s.substr(0, i) == t)
			(ans += dp[i][K % 2][1]) %= mod;
	cout << ans << endl;
	return 0;
}
