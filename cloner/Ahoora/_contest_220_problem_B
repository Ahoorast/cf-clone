#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10, M = 1000 * 1000 + 100;
int n, a[N], l[N], r[N], ans[N];
unordered_map<int, int> cnt;
 
struct Mo {
	int res = 0;
	void rm(int x) {
		res -= (cnt[x] == x);
		cnt[x]--;
		res += (cnt[x] == x);
	}
	void add(int x) {
		res -= (cnt[x] == x);
		cnt[x]++;
		res += (cnt[x] == x);
	}
};
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> n >> Q;
	for (int i = 1; i <= n; i++) 
		cin >> a[i];
	vector<int> query;
	for (int i = 0; i < Q; i++) {
		cin >> l[i] >> r[i];
		query.push_back(i);
	}
	int S = 320;
	sort(query.begin(), query.end(), [&] (int i, int j) {
			return l[i] / S == l[j] / S? r[i] > r[j]: l[i] < l[j];
			});
	int L = 1, R = n;
	Mo t;
	for (int i = 1; i <= n; i++) 
		t.add(a[i]);
	for (auto i: query) {
		while (L < l[i]) 
			t.rm(a[L++]);
		while (R > r[i]) 
			t.rm(a[R--]);
		while (L > l[i]) 
			t.add(a[--L]);
		while (R < r[i]) 
			t.add(a[++R]);
		ans[i] = t.res;
	}
	for (int i = 0; i < Q; i++)
		cout << ans[i] << '\n';
	return 0;
}
