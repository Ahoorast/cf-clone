#include<bits/stdc++.h>
using namespace std;
 
const int N = 3010;
int ted, path, up[N], rest[N], n;
vector<pair<int, int>> adj[N];
 
void dfs(int v, int par = 0) {
	for (auto u: adj[v]) 
		if (u.first != par) {
			ted += u.second;
			path += u.second;
			up[u.first] = min({up[u.first], (u.second == 0) + up[v], path});
			rest[u.first] = rest[v] + u.second;
			dfs(u.first, v);
			path -= u.second;
		}
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1, v, u; i < n; i++) {
		cin >> v >> u;
		adj[v].push_back({u, 0});
		adj[u].push_back({v, 1});
	}
	int ans = n - 1;
	for (int i = 1; i <= n; i++) {
		ted = path = 0;
		for (int i = 1; i <= n; i++)
			up[i] = 1 << 29, rest[i] = 0;
		up[i] = 0;
		dfs(i);
		for (int j = 1; j <= n; j++)
			ans = min(ans, up[j] + ted - rest[j]);
	}
	cout << ans << '\n';
	return 0;
}
