#include <bits/stdc++.h>
using namespace std;
 
const int N = 5010;
bool isPalidrom[N][N];
char s[N];
int n, dp[N][N], l, r, Q;
 
inline void everySubP() {
	for (int i = 0; i < n; i++)
		isPalidrom[i][i] = true;
	for (int i = 0; i + 1 < n; i++)
		if (s[i] == s[i + 1])
			isPalidrom[i][i + 1] = true;
	for (int i = n - 1; i >= 0; i--)
		for (int j = i + 2; j < n; j++)
			isPalidrom[i][j] = (isPalidrom[i + 1][j - 1] & (s[i] == s[j]));
	for (int i = 0; i <= n; i++)
		dp[i][i] = 1;
	for (int i = 0; i + 1 < n; i++)
		dp[i][i + 1] = 2 + (s[i] == s[i + 1]);
	for (int i = n - 1; i >= 0; i--)
		for (int j = i + 2; j < n; j++)
			dp[i][j] = dp[i][j - 1] + dp[i + 1][j] - dp[i + 1][j - 1] + isPalidrom[i][j];
}
 
int main() {
	cin >> s;
	scanf("%d", &Q);
	n = strlen(s);
	everySubP();
	while (Q--) {
		scanf("%d%d", &l, &r);
		printf("%d\n", dp[--l][--r]);
	}
	return 0;
}
