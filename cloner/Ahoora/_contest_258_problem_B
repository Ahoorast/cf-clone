#include <bits/stdc++.h>
using namespace std;
 
const long long mod = 1LL * 1000 * 1000 * 1000 + 7;
const int N = 30;
long long cnt[N][N], c[N][N], m, pw[2][N], team[7], fact[N], l;
 
void prep() {
	pw[0][0] = pw[1][0] = fact[0] = 1;
	for (int i = 1; i < N; i++)
		pw[0][i] = pw[0][i - 1] * 2 % mod, pw[1][i] = pw[1][i - 1] * 8 % mod, fact[i] = fact[i - 1] * i % mod;
	for (int i = 0; i < N; i++)
		c[0][i] = c[i][i] = 1;
	for (int i = 1; i < N; i++)
		for (int j = i + 1; j < N; j++)
			c[i][j] = (c[i - 1][j - 1] + c[i][j - 1]) % mod;
}
 
void build() {
	long long K = m;
	vector<int> v;
	while (K)
		v.push_back(K % 10), K /= 10, l++;
	cnt[0][0] = 1;
	for (int i = 1; i < l; i++) 
		for (int j = 0; j <= i; j++) {
			if (j - 1 >= 0)
				cnt[i][j] += cnt[i - 1][j - 1] * 2;
			cnt[i][j] += 8 * cnt[i - 1][j];
		}
	cnt[0][0] = 1;
	int lucky = 0;
	for (int i = v.size() - 1; i >= 0; i--) {
		for (int k = 0; k <= 10; k++) 
			for (int j = 0; j < v[i]; j++) {
				if ((j == 4 || j == 7) && k - 1 - lucky >= 0)
					cnt[l][k] += cnt[i][k - 1 - lucky];
				else if (k - lucky >= 0 && j != 4 && j != 7)
					cnt[l][k] += cnt[i][k - lucky];
			}
		lucky += (v[i] == 4 || v[i] == 7);
	}
	cnt[l][0]--;
	cnt[l][lucky]++;
}
 
bool inTekeCodeBeTeamMiafzayad() {
	team[0]++;
	for (int i = 0; i + 1 < 7; i++)
		team[i + 1] += team[i] / 10, team[i] %= 10;
	for (int i = 0; i < 7; i++)
		if (team[i] != 9)
			return true;
	return false;
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	prep();
	cin >> m;
	build();
	long long ans = 0;
	while (inTekeCodeBeTeamMiafzayad()) {
		int ShallWe = 0;
		for (int i = 0; i < 6; i++)
			ShallWe += team[i];
		if (team[6] > ShallWe) {
			long long res = 1;
			for (int i = 0; i < 7; i++)
				(res *= cnt[l][team[i]]) %= mod, cnt[l][team[i]]--;
			for (int i = 0; i < 7; i++)
				cnt[l][team[i]]++;
			(ans += res) %= mod;
		}
	}
	cout << ans << endl;
	return 0;
}
