#include<bits/stdc++.h>
using namespace std;
 
const int N = 2010, mod = 1LL * 1000 * 1000 * 1000 + 7;
int dp[N][N], n, m, s[N][N], sum[N][N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	for (int i = 2; i < N; i++)
		dp[i][0] = 1;
	for (int i = 1; i < N; i++)
		for (int j = i; j >= 2; j--) {
			(sum[i][0] += dp[j][0]) %= mod;
			(s[i][0] += 1LL * dp[j][0] * (i - j + 1) % mod) %= mod;
		}
	for (int j = 1; j < N; j++) 
		for (int i = 2; i < N; i++) {
			dp[i][j] = 1;
			(dp[i][j] += s[i][j - 1]) %= mod;
			sum[i][j] = (sum[i - 1][j] + dp[i][j]) % mod;
			s[i][j] = (((dp[i][j] + s[i - 1][j]) % mod) + sum[i - 1][j]) % mod;
		}
	int ans = 0;
	for (int i = 1; i <= n; i++)
		for (int j = 2; j <= m; j++) {
			if (i > 1)
				(ans += 1LL * (((dp[j][i - 1] - dp[j][i - 2]) % mod + mod) % mod)* dp[j][n - i] % mod * (m - j + 1) % mod) %= mod;
			else
				(ans += 1LL * dp[j][i - 1] * dp[j][n - i] % mod * (m - j + 1) % mod) %= mod;
		}
	cout << ans << '\n';
	return 0;
}
