#include <bits/stdc++.h>
using namespace std;
 
const int N = 24, mod = 1ll * 1000 * 1000 * 1000 + 7;
int n, a[N + 5], K, x[2] = {-1, -1}, dp[1 << 24], sum[1 << 24];
 
void read() {
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	cin >> K;
	for (int i = 0; i < K; i++)
		cin >> x[i];
}
 
void prep() {
	for (int i = 0; i < (1 << n); i++) {
		int mask = i;
		for (int j = 0; j < n; j++)
			sum[i] += a[j] * (mask % 2), mask /= 2;
	}
	dp[0] = 1;
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	read();
	prep();
	for (int i = 1; i < (1 << n); i++) 
		if (sum[i] != x[0] && sum[i] != x[1]) 
			for (int j = 0; j < n; j++)
				if (i - (1 << j) >= 0 && ((1 << j) & i))
					(dp[i] += dp[i - (1 << j)]) %= mod;
	cout << dp[(1 << n) - 1] << endl;
	return 0;
}
