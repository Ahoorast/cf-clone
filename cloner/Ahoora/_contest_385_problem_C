#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 1000 + 10;
int n, cnt[N * 10], d[N * 10], x[N];
vector<int> p;
 
void prep() {
	for (int i = 1; i < N * 10; i++)
		d[i] = true;
	d[1] = false;
	for (int i = 1; i * i < N * 10; i++)
		if (d[i])
			for (int j = i * i; j < N * 10; j += i)
				d[j] = false;
	for (int i = 1; i * i < N * 10; i++)
		if (d[i])
			p.push_back(i);
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	prep();
	p.push_back(1 << 15);
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> x[i];
	for (int i = 1; i <= n; i++) {
		for (int j = 0; p[j] * p[j] <= x[i]; j++)
			if (x[i] % p[j] == 0) {
				cnt[p[j]]++;
				while (x[i] % p[j] == 0)
					x[i] /= p[j];
			}
		if (x[i] > 1)
			cnt[x[i]]++;
	}
	int Q;
	for (int i = 1; i < N * 10; i++)
		cnt[i] += cnt[i - 1];
	cin >> Q;
	while (Q--) {
		int l, r;
		cin >> l >> r;
		r = min(r, N * 10 - 1), l = min(l - 1, N * 10 - 1);
		cout << max(cnt[r] - cnt[l], 0) << endl;
	}
	return 0;
}
