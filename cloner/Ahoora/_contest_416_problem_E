#include<bits/stdc++.h>
using namespace std;
 
const int N = 510;
int n, m, in[N], ans[N][N];
long long d[N][N], e[N][N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
			if (i != j)
				d[i][j] = e[i][j] = 1LL << 60;
	for (int i = 1, v, u; i <= m; i++) {
		long long w;
		cin >> v >> u >> w;
		d[v][u] = d[u][v] = min(d[v][u], w);
		e[v][u] = e[u][v] = d[v][u];
	}
	for (int k = 1; k <= n; k++)
		for (int i = 1; i <= n; i++)
			for (int j = 1; j <= n; j++)
				d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
	for (int s = 1; s <= n; s++) {
		for (int i = 1; i <= n; i++)
			in[i] = 0;
		for (int v = 1; v <= n; v++)
			for (int u = 1; u <= n; u++)
				if (v != u && d[s][v] == d[s][u] + e[u][v])
					in[v]++;
		for (int t = 1; t <= n; t++)
			for (int v = 1; v <= n; v++)
				if (d[s][t] == d[s][v] + d[v][t])
					ans[s][t] += in[v];
	}
	for (int i = 1; i <= n; i++)
		for (int j = i + 1; j <= n; j++) {
			if (d[i][j] == 1LL << 60)
				ans[i][j] = 0;
			cout << ans[i][j] << ' ';
		}
	cout << '\n';
	return 0;
}
