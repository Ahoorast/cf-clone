#include<bits/stdc++.h>
using namespace std;
 
const int N = 3 * 1000 * 100 + 10;
int n, p, deg[N];
map<int, int> cnt[N];
vector<int> adj[N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> p;
	for (int i = 0, x, y; i < n; i++) {
		cin >> x >> y;
		--x, --y;
		adj[x].push_back(y);
		adj[y].push_back(x);
		deg[x]++, deg[y]++;
		cnt[x][y]++, cnt[y][x]++;
	}
	vector<int> v;
	for (int i = 0; i < n; i++)
		v.push_back(deg[i]);
	sort(v.begin(), v.end());
	long long ans = 0;
	for (int i = 0; i < n; i++) {
		ans += n - (lower_bound(v.begin(), v.end(), p - deg[i]) - v.begin());
		if (deg[i] + deg[i] >= p)
			ans--;
		sort(adj[i].begin(), adj[i].end());
		adj[i].resize(unique(adj[i].begin(), adj[i].end()) - adj[i].begin());
		for (auto u: adj[i]) 
			if (deg[i] + deg[u] >= p && deg[i] + deg[u] - cnt[i][u] < p)
				ans--;
	}
	cout << ans / 2 << '\n';
	return 0;
}
