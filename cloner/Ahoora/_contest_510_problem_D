#include<bits/stdc++.h>
using namespace std;
 
const int N = 310;
int n, l[N], c[N];
 
int main() { 
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> l[i];
	for (int i = 0; i < n; i++)
		cin >> c[i];
	int g = l[0];
	for (int i = 1; i < n; i++)
		g = __gcd(g, l[i]);
	if (g > 1)
		return cout << "-1\n", 0;
	map<int, int> dp[2];
	dp[0][l[0]] = c[0];
	for (int i = 1; i < n; i++) {
		dp[i & 1] = dp[!(i & 1)];
		if (dp[i & 1].count(l[i]))
			dp[i & 1][l[i]] = min(dp[i & 1][l[i]], c[i]);
		else
			dp[i & 1][l[i]] = c[i];
		for (auto x: dp[!(i & 1)]) {
			g = __gcd(x.first, l[i]);
			if (dp[i & 1].count(g))
				dp[i & 1][g] = min(dp[i & 1][g], x.second + c[i]);
			else
				dp[i & 1][g] = x.second + c[i];
		}
	}
	cout << dp[(n - 1) & 1][1] << '\n';
	return 0;
}
