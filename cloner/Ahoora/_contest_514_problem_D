#include<bits/stdc++.h>
using namespace std;
 
const int N = 100 * 1000 + 100;
int A[N][10], n, m, k, R[N];
set<int> st[10];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m >> k;
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
			cin >> A[i][j];
	R[0] = 1;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++)
			st[j].erase(A[i - 1][j]);
		int sum = 0;
		R[i] = max(R[i - 1], i) - 1;
		while (R[i] <= n && sum <= k) {
			R[i]++;
			for (int j = 1; j <= m; j++)
				st[j].insert(A[R[i]][j]);
			sum = 0;
			for (int j = 1; j <= m; j++)
				sum += *--st[j].end();
		}
		R[i]--;
	}
	int ans = 0;
	for (int i = 1; i <= n; i++)
		ans = max(ans, R[i] - i + 1);
	for (int i = 1; i <= n; i++)
		if (R[i] - i + 1 == ans) {
			for (int j = 1; j <= m; j++) {
				int mx = 0;
				for (int K = i; K <= R[i]; K++)
					mx = max(mx, A[K][j]);
				cout << mx << ' ';
			}
			return 0;
		}
	for (int i = 1; i <= m; i++)
		cout << 0 << ' ';
	return 0;
}
