#include <bits/stdc++.h>
using namespace std;
 
const int maxn = 1e5 + 100;
vector<int> v;
bool res[maxn][10];
 
 
 
int main() {
 	ios_base:: sync_with_stdio(false), cin.tie(0), cout.tie(0);
	long long n, k = 0, flag = 0;
	cin >> n;
	while (n) v.push_back(n % 10), n /= 10;
	while (flag == 0) {
		int l = 10;
		for (int i = 0; i < v.size(); i++)
			if (v[i] > 0 && v[i] < l)
				l = v[i];
		for (int i = 0; i < v.size(); i++)
			if (v[i] != 0)
			 res[k][i] = 1, v[i]--;
		k++;
		int cnt = 0;
		for (int i = 0; i < v.size(); i++)
			if (v[i] != 0)
				cnt++;
		if (cnt == 0)
			flag++;
	}
	cout << k << endl;
	for (int i = 0; i < k; i++) {
		int cnt = 0;
		for (int j = v.size() - 1; j >= 0; j--)
			if (cnt != 0 || res[i][j] > 0) cout << res[i][j], cnt++;
		cout << endl;
	}
	return 0;
}
