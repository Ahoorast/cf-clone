#include<bits/stdc++.h>
using namespace std;
 
long long n, k, l, m;
 
long long Pow(long long a, long long b) {
	return b? (b & 1? a: 1) % m * Pow(a * a % m, b >> 1) % m: 1;
}
 
struct Mat {
	int a[2][2] = {{1, 1}, {1, 0}};
	Mat operator * (Mat b) {
		Mat res;
		for (int i = 0; i < 2; i++)
			for (int j = 0; j < 2; j++)
				res.a[i][j] = 0;
		for (int i = 0; i < 2; i++)
			for (int j = 0; j < 2; j++)
				for (int k = 0; k < 2; k++)
					(res.a[i][j] += (1LL * a[i][k] * b.a[k][j]) % m) %= m;
		return res;
	}
};
 
Mat fib(long long n) {
	Mat t;
	if (n == 1)
		return t;
	Mat res = fib(n / 2);
	res = res * res;
	if (n & 1)
		res = res * t;
	return res;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> k >> l >> m;
	if (l < 60 && k >= (1LL << l))
		return cout << "0\n", 0;
	int t = fib(n + 1).a[0][0], ans = 1;
	for (int i = 0; i < l; i++) 
		if ((1LL << i) & k) 
			ans = 1LL * ans * (((Pow(2, n) - t) % m + m) % m) % m;
		else
			ans = 1LL * ans * t % m;
	cout << ans % m << '\n';
	return 0;
}
