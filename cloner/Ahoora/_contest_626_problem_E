#include<bits/stdc++.h>
using namespace std;
 
const int N = 2 * 1000 * 100 + 10;
int n;
long long s[N], x[N];
 
long long val(int med, int len) {
	return s[n] - s[n - len] + s[med + 1] - s[med - len];
}
 
long long cmp(int i, int l, int med, int len) {
	long long z = 1LL * (2 * l + 1) * (2 * len + 1);
	return 1LL * (2 * len + 1) * val(i, l) - z * x[i] > 1LL * (2 * l + 1) * val(med, len) - z * x[med];
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> x[i];
	sort(x, x + n);
	for (int i = 1; i <= n; i++)
		s[i] = s[i - 1] + x[i - 1];
	long long med = 0, len = 0;
	for (int i = 0; i < n; i++) {
		long long l = -1, r = min(i, n - i - 1);
		while (l + 1 < r) {
			int mid = l + r >> 1;
			if (cmp(i, mid + 1, i, mid))
				l = mid;
			else
				r = mid;
		}
		if (cmp(i, r, med, len))
			med = i, len = r;
	}
	cout << len * 2 + 1 << '\n';
	for (int i = med - len; i <= med; i++)
		cout << x[i] << ' ';
	for (int i = n - len; i < n; i++)
		cout << x[i] << ' ';
	cout << '\n';
	return 0;
}
