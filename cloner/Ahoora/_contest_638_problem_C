#include<bits/stdc++.h>
using namespace std;
 
const int N = 2000 * 100 + 10;
int n, d;
vector<int> ans[N];
vector<pair<int, int>> adj[N];
 
void dfs(int root, int par = -1, int prv = 0) {
	int nxt = 1;
	for (auto u: adj[root])
		if (u.first ^ par) {
			if (nxt == prv)
				nxt++;
			ans[nxt].push_back(u.second);
			d = max(d, nxt);
			dfs(u.first, root, nxt);
			nxt++;
		}
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1, v, u; i < n; i++) {
		cin >> v >> u;
		adj[v].push_back({u, i});
		adj[u].push_back({v, i});
	}
	dfs(1);
	cout << d << '\n';
	for (int i = 1; i <= d; i++, cout << '\n') {
		cout << (int)(ans[i].size()) << ' ';
		for (auto x: ans[i])
			cout << x << ' ';
	}
	cout << '\n';
	return 0;
}
