#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 + 10, M = 2 * 1000 * 100 + 100;
int n, m, from[M], to[M], d[N][N], l[M], r[M], s[M], t[M];
bool ans[M];
vector<int> query[M];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	int Q;
	cin >> n >> m >> Q;
	for (int i = 1; i <= m; i++) 
		cin >> from[i] >> to[i];
	for (int i = 1; i <= Q; i++) {
		cin >> l[i] >> r[i] >> s[i] >> t[i];
		query[l[i]].push_back(i);
	}
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
			d[i][j] = 1 << 30;
	for (int i = m; i >= 1; i--) {
		int v = from[i], u = to[i];
		d[v][u] = d[u][v] = i;
		for (int x = 1; x <= n; x++)
			d[v][x] = d[u][x] = min(d[u][x], d[v][x]);
		for (auto it: query[i]) 
			if (d[s[it]][t[it]] <= r[it])
				ans[it] = true;
	}
	for (int i = 1; i <= Q; i++)
		cout << (ans[i]? "Yes": "No") << '\n';
	return 0;
}
