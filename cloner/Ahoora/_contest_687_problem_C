#include<bits/stdc++.h>
using namespace std;
 
const int N = 510;
int n, K, c[N];
bool dp[2][N][N];
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> K;
	for (int i = 1; i <= n; i++)
		cin >> c[i];
	dp[0][0][0] = true;
	for (int i = 1; i <= n; i++)
		for (int j = 0; j <= K; j++)
			for (int k = 0; k <= K; k++) {
				bool t = i & 1;
				dp[t][j][k] = dp[!t][j][k];
				if (j >= c[i] && k >= c[i])
					dp[t][j][k] |= dp[!t][j - c[i]][k - c[i]];
				if (j >= c[i])
					dp[t][j][k] |= dp[!t][j - c[i]][k];
			}
	vector<int> ans;
	for (int v = 0; v <= K; v++)
		if (dp[n & 1][K][v])
			ans.push_back(v);
	cout << (int)(ans.size()) << '\n';
	for (auto x: ans)
		cout << x << ' ';
	cout << '\n';
	return 0;
}
