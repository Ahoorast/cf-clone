#include <iostream>
using namespace std;
int stoi(string a)
{
	unsigned long long ans = 0, az = a.size(), power = 1;
	for(int i = 1; i < az; i++)
	{
		power *= 10;
	}
	for(int i = 0; i < az; i++)
	{
		ans += (a[i] - '0') * power;
		power /= 10;
	}
	return ans;
}
string itos(unsigned long long a)
{
	unsigned long long power = 1, ansa = 0, ansb = 0, power1 = 1, po = 0;
	for(int i = 0; a % power != a; i++)
	{
		power *= 10;
		ansa++;
	}
	string ans;
	for(int i = 0; i < ansa; i++)
	{
		unsigned long long f = (a % power) - (a % (power / 10)), f01 = 0, fans = 0;
		while(f != 0)    
  		{    
			f01 = f % 10;      
			fans = fans * 10 + f01;    
			f /= 10;    
		}  
		ans += fans + 48;  
		power /= 10;
	}
	return ans;
}
int main()
{
	unsigned long long a, b, c, c0;
	cin >> a >> b;
	if(a + b == 10)
	{
		cout << "NO";
		return 0;
	}
	c = a + b;
	string sa = itos(a), sb = itos(b), sa1, sb1;
	for(int i = 0; i < sa.size(); i++)
	{
		if(sa[i] != '0')
		{
			sa1 += sa[i];
		}
	}
	for(int i = 0; i < sb.size(); i++)
	{
		if(sb[i] != '0')
		{
			sb1 += sb[i];
		}
	}
	unsigned long long a1 = stoi(sa1), b1 = stoi(sb1), c1 = 0;
	c1 = a1 + b1;
	string c1s = itos(c1), c1ans;
	for(int i = 0; i < c1s.size(); i++)
	{
		if(c1s[i] != '0')
		{
			c1ans += c1s[i];
		}
	}
	string cs = itos(c), cans;
	for(int i = 0; i < cs.size(); i++)
	{
		if(cs[i] != '0')
		{
			cans += cs[i];
		}
	}
	unsigned long long c1fans = stoi(c1ans), cfans = stoi(cans);
	if(c1fans == a1 + b1 && c1fans == cfans)
	{
		cout << "YES";
	}
	else 
	{
		cout << "NO";
	}
	return 0;
}
