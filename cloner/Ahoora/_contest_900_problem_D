#include<bits/stdc++.h>
using namespace std;
 
const long long mod = 1LL * 1000 * 1000 * 1000 + 7;
long long x, y, res;
 
long long Pow(long long a, long long b) {
	return b? (b & 1? a: 1) % mod * Pow(a * a % mod, b >> 1) % mod: 1;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> x >> y;
	if (y % x)
		return cout << 0 << endl, 0;
	y /= x;
	res += Pow(2, y - 1);
	long long k = y;
	vector<int> pDiv;
	for (int i = 2; 1LL * i * i <= k; i++)
		if (k % i == 0) {
			pDiv.push_back(i);
			while (k % i == 0)
				k /= i;
		}
	if (k > 1)
		pDiv.push_back(k), k = 1;
	int sz = pDiv.size();
	long long aintRes = 0;
	for (int i = 1; i < 1 << sz; i++) {
		long long g = 1;
		for (int j = 0; j < sz; j++)
			if ((1 << j) & i)
				g *= pDiv[j];
		int x = __builtin_popcount(i);
		if (y % g == 0 && x & 1)
			(aintRes += Pow(2, y / g - 1)) %= mod;
		else if (y % g == 0)
			(res += Pow(2, y / g - 1)) %= mod;
	}
	cout << ((res - aintRes) % mod + mod) % mod << endl;
	return 0;
}
