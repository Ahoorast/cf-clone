#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 10, C = 26;
bitset<N> pos[C + 2], bt;
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	string s;
	int Q;
	cin >> s >> Q;
	int sz = (int)(s.size());
	for (int i = 0; i < sz; i++)
		pos[s[i] - 'a'].set(i);
	while (Q--) {
		string m;
		int k;
		cin >> k >> m;
		int n = (int)(m.size());
		vector<int> good;
		bt = pos[m[0] - 'a'];
		for (int i = 1; i < n; i++)
			bt &= pos[m[i] - 'a'] >> i;
		int gz = 0;
		for (int i = bt._Find_first(); i < sz; i = bt._Find_next(i))
			good.push_back(i), gz++;
		int ans = N;
		for (int i = k - 1; i < gz; i++)
			ans = min(ans, good[i] - good[i - k + 1] + n);
		cout << (ans < N? ans: -1) << '\n';
	}
	return 0;
}
