#include<bits/stdc++.h>
using namespace std;
 
const int LG = 22;
int n, m;
int par[1 << LG], has[1 << LG];
bool vis[1 << LG];
 
void dfs(int v, bool tp = 0) {
	if (vis[v])
		return;
	vis[v] = true;
	if (has[v]) 
		dfs((1 << n) - 1 - v, 1);
	if (tp == 1) 
		for (int i = 0; i < n; i++)
			if (v & (1 << i))
				dfs(v ^ (1 << i), 1);
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	for (int i = 0, a; i < m; i++) {
		cin >> a;
		has[a] = true;
	}
	iota(par, par + m, 0);
	int ans = 0;
	for (int i = 0; i < 1 << n; i++)
		if (!vis[i] && has[i])
			ans++, dfs(i);
	cout << ans << '\n';
	return 0;
}
