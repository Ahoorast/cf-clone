#include<bits/stdc++.h>
using namespace std;
Â 
const int N = 2 * 1000 * 100 + 10;
int n, m, a[N];
long long ans;
Â 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	set<pair<int, int>> s;
	for (int i = 1; i <= n; i++)
		cin >> a[i], s.insert({a[i] % m, i});
	s.insert({-1  * (1 << 30), 0});
	for (int i = 0; i < m; i++) {
		int t = n / m;
		while (t--) {
			auto it1 = --s.end(),  it2 = s.lower_bound({i, -1});
			if ((*it2).first > i)
				it2--;
			if (it2 == s.begin())
				it2++;
			int dx = 1 << 30, dy = 1 << 30;
			if (it1 != s.begin() && it1 != s.end())
				dx = (*it1).first;
			if (it2 != s.begin() && it2 != s.end())
				dy = (*it2).first;
			if (i - dx >= 0 && it1 != s.begin() && it1 != s.end())
				dx = i - dx;
			else if (it1 != s.begin() && it1 != s.end())
				dx = m - dx + i;
			int ind = 0;
			if (i - dy >= 0 && it2 != s.begin() && it2 != s.end())
				dy = i - dy;
			else if (it2 != s.begin() && it2 != s.end())
				dy = m - dy + i;
			if (dx < dy) 
				ind = (*it1).second, s.erase(it1);
			else
				ind = (*it2).second, s.erase(it2);
			a[ind] += min(dx, dy);
			ans += min(dx, dy);
		}
	}
	cout << ans << endl;
	for (int i = 1; i <= n; i++)
		cout << a[i] << ' ';
	cout << endl;
	return 0;
}
