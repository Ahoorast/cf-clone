#include<bits/stdc++.h>
using namespace std;
 
const int N = 1000 * 100 + 10;
bool isP[N];
int sz;
vector<int> p;
 
void alak() {
	fill(isP, isP + N, true);
	isP[1] = false;
	for (int i = 2; i < N; i++)
		if (isP[i]) {
			p.push_back(i), sz++;
			if (1LL * i * i < N)
				for (int j = i * i; j < N; j += i)
					isP[j] = false;
		}
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	alak();
	int Q;
	cin >> Q;
	while (Q--) {
		int x;
		cin >> x;
		vector<int> vec;
		for (int i = 0; i < sz && 1LL * p[i] * p[i] <= x; i++) 
			while (x % p[i] == 0)
				x /= p[i], vec.push_back(p[i]);
		if (x > 1) 
			vec.push_back(x);
		if ((int)(vec.size()) != 2)
			cout << "No\n";
		else
			cout << "Yes\n";
	}
	return 0;
}
