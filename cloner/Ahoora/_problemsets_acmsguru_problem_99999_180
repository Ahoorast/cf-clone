#include<bits/stdc++.h>
using namespace std;
 
const int N = 6 * 1000 * 100 + 10;
int n, a[N], fen[N];
long long inv;
 
int get(int x) {
	int res = 0;
	for (; x; x -= x & (-x))
		res += fen[x];
	return res;
}
 
void upd(int x) {
	for (; x <= n; x += x & (-x))
		fen[x]++;
}
 
int main() { 
	ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	vector<int> vec;
	for (int i = 0; i < n; i++)
		cin >> a[i], vec.push_back(a[i]);
	sort(vec.begin(), vec.end());
	vec.resize(unique(vec.begin(), vec.end()) - vec.begin());
	for (int i = 0; i < n; i++)
		a[i] = lower_bound(vec.begin(), vec.end(), a[i]) - vec.begin() + 1;
	for (int i = n - 1; i >= 0; i--) {
		inv += get(a[i] - 1);
		upd(a[i]);
	}
	cout << inv << '\n';
	return 0;
}
